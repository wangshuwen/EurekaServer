package com.cst.xinhe.persistence.model.malfunction;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MalfunctionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public MalfunctionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSelfCheckIdIsNull() {
            addCriterion("self_check_id is null");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdIsNotNull() {
            addCriterion("self_check_id is not null");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdEqualTo(Integer value) {
            addCriterion("self_check_id =", value, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdNotEqualTo(Integer value) {
            addCriterion("self_check_id <>", value, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdGreaterThan(Integer value) {
            addCriterion("self_check_id >", value, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("self_check_id >=", value, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdLessThan(Integer value) {
            addCriterion("self_check_id <", value, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdLessThanOrEqualTo(Integer value) {
            addCriterion("self_check_id <=", value, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdIn(List<Integer> values) {
            addCriterion("self_check_id in", values, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdNotIn(List<Integer> values) {
            addCriterion("self_check_id not in", values, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdBetween(Integer value1, Integer value2) {
            addCriterion("self_check_id between", value1, value2, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckIdNotBetween(Integer value1, Integer value2) {
            addCriterion("self_check_id not between", value1, value2, "selfCheckId");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeIsNull() {
            addCriterion("self_check_time is null");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeIsNotNull() {
            addCriterion("self_check_time is not null");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeEqualTo(Date value) {
            addCriterion("self_check_time =", value, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeNotEqualTo(Date value) {
            addCriterion("self_check_time <>", value, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeGreaterThan(Date value) {
            addCriterion("self_check_time >", value, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("self_check_time >=", value, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeLessThan(Date value) {
            addCriterion("self_check_time <", value, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeLessThanOrEqualTo(Date value) {
            addCriterion("self_check_time <=", value, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeIn(List<Date> values) {
            addCriterion("self_check_time in", values, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeNotIn(List<Date> values) {
            addCriterion("self_check_time not in", values, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeBetween(Date value1, Date value2) {
            addCriterion("self_check_time between", value1, value2, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andSelfCheckTimeNotBetween(Date value1, Date value2) {
            addCriterion("self_check_time not between", value1, value2, "selfCheckTime");
            return (Criteria) this;
        }

        public Criteria andTerminalIdIsNull() {
            addCriterion("terminal_id is null");
            return (Criteria) this;
        }

        public Criteria andTerminalIdIsNotNull() {
            addCriterion("terminal_id is not null");
            return (Criteria) this;
        }

        public Criteria andTerminalIdEqualTo(Integer value) {
            addCriterion("terminal_id =", value, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdNotEqualTo(Integer value) {
            addCriterion("terminal_id <>", value, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdGreaterThan(Integer value) {
            addCriterion("terminal_id >", value, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("terminal_id >=", value, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdLessThan(Integer value) {
            addCriterion("terminal_id <", value, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdLessThanOrEqualTo(Integer value) {
            addCriterion("terminal_id <=", value, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdIn(List<Integer> values) {
            addCriterion("terminal_id in", values, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdNotIn(List<Integer> values) {
            addCriterion("terminal_id not in", values, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdBetween(Integer value1, Integer value2) {
            addCriterion("terminal_id between", value1, value2, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIdNotBetween(Integer value1, Integer value2) {
            addCriterion("terminal_id not between", value1, value2, "terminalId");
            return (Criteria) this;
        }

        public Criteria andTerminalIpIsNull() {
            addCriterion("terminal_ip is null");
            return (Criteria) this;
        }

        public Criteria andTerminalIpIsNotNull() {
            addCriterion("terminal_ip is not null");
            return (Criteria) this;
        }

        public Criteria andTerminalIpEqualTo(String value) {
            addCriterion("terminal_ip =", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpNotEqualTo(String value) {
            addCriterion("terminal_ip <>", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpGreaterThan(String value) {
            addCriterion("terminal_ip >", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpGreaterThanOrEqualTo(String value) {
            addCriterion("terminal_ip >=", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpLessThan(String value) {
            addCriterion("terminal_ip <", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpLessThanOrEqualTo(String value) {
            addCriterion("terminal_ip <=", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpLike(String value) {
            addCriterion("terminal_ip like", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpNotLike(String value) {
            addCriterion("terminal_ip not like", value, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpIn(List<String> values) {
            addCriterion("terminal_ip in", values, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpNotIn(List<String> values) {
            addCriterion("terminal_ip not in", values, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpBetween(String value1, String value2) {
            addCriterion("terminal_ip between", value1, value2, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andTerminalIpNotBetween(String value1, String value2) {
            addCriterion("terminal_ip not between", value1, value2, "terminalIp");
            return (Criteria) this;
        }

        public Criteria andWifiErrorIsNull() {
            addCriterion("wifi_error is null");
            return (Criteria) this;
        }

        public Criteria andWifiErrorIsNotNull() {
            addCriterion("wifi_error is not null");
            return (Criteria) this;
        }

        public Criteria andWifiErrorEqualTo(Integer value) {
            addCriterion("wifi_error =", value, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorNotEqualTo(Integer value) {
            addCriterion("wifi_error <>", value, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorGreaterThan(Integer value) {
            addCriterion("wifi_error >", value, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("wifi_error >=", value, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorLessThan(Integer value) {
            addCriterion("wifi_error <", value, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorLessThanOrEqualTo(Integer value) {
            addCriterion("wifi_error <=", value, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorIn(List<Integer> values) {
            addCriterion("wifi_error in", values, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorNotIn(List<Integer> values) {
            addCriterion("wifi_error not in", values, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorBetween(Integer value1, Integer value2) {
            addCriterion("wifi_error between", value1, value2, "wifiError");
            return (Criteria) this;
        }

        public Criteria andWifiErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("wifi_error not between", value1, value2, "wifiError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorIsNull() {
            addCriterion("voice_error is null");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorIsNotNull() {
            addCriterion("voice_error is not null");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorEqualTo(Integer value) {
            addCriterion("voice_error =", value, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorNotEqualTo(Integer value) {
            addCriterion("voice_error <>", value, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorGreaterThan(Integer value) {
            addCriterion("voice_error >", value, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("voice_error >=", value, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorLessThan(Integer value) {
            addCriterion("voice_error <", value, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorLessThanOrEqualTo(Integer value) {
            addCriterion("voice_error <=", value, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorIn(List<Integer> values) {
            addCriterion("voice_error in", values, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorNotIn(List<Integer> values) {
            addCriterion("voice_error not in", values, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorBetween(Integer value1, Integer value2) {
            addCriterion("voice_error between", value1, value2, "voiceError");
            return (Criteria) this;
        }

        public Criteria andVoiceErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("voice_error not between", value1, value2, "voiceError");
            return (Criteria) this;
        }

        public Criteria andCoErrorIsNull() {
            addCriterion("co_error is null");
            return (Criteria) this;
        }

        public Criteria andCoErrorIsNotNull() {
            addCriterion("co_error is not null");
            return (Criteria) this;
        }

        public Criteria andCoErrorEqualTo(Integer value) {
            addCriterion("co_error =", value, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorNotEqualTo(Integer value) {
            addCriterion("co_error <>", value, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorGreaterThan(Integer value) {
            addCriterion("co_error >", value, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("co_error >=", value, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorLessThan(Integer value) {
            addCriterion("co_error <", value, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorLessThanOrEqualTo(Integer value) {
            addCriterion("co_error <=", value, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorIn(List<Integer> values) {
            addCriterion("co_error in", values, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorNotIn(List<Integer> values) {
            addCriterion("co_error not in", values, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorBetween(Integer value1, Integer value2) {
            addCriterion("co_error between", value1, value2, "coError");
            return (Criteria) this;
        }

        public Criteria andCoErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("co_error not between", value1, value2, "coError");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorIsNull() {
            addCriterion("co2_error is null");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorIsNotNull() {
            addCriterion("co2_error is not null");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorEqualTo(Integer value) {
            addCriterion("co2_error =", value, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorNotEqualTo(Integer value) {
            addCriterion("co2_error <>", value, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorGreaterThan(Integer value) {
            addCriterion("co2_error >", value, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("co2_error >=", value, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorLessThan(Integer value) {
            addCriterion("co2_error <", value, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorLessThanOrEqualTo(Integer value) {
            addCriterion("co2_error <=", value, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorIn(List<Integer> values) {
            addCriterion("co2_error in", values, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorNotIn(List<Integer> values) {
            addCriterion("co2_error not in", values, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorBetween(Integer value1, Integer value2) {
            addCriterion("co2_error between", value1, value2, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCo2ErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("co2_error not between", value1, value2, "co2Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorIsNull() {
            addCriterion("ch4_error is null");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorIsNotNull() {
            addCriterion("ch4_error is not null");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorEqualTo(Integer value) {
            addCriterion("ch4_error =", value, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorNotEqualTo(Integer value) {
            addCriterion("ch4_error <>", value, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorGreaterThan(Integer value) {
            addCriterion("ch4_error >", value, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("ch4_error >=", value, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorLessThan(Integer value) {
            addCriterion("ch4_error <", value, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorLessThanOrEqualTo(Integer value) {
            addCriterion("ch4_error <=", value, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorIn(List<Integer> values) {
            addCriterion("ch4_error in", values, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorNotIn(List<Integer> values) {
            addCriterion("ch4_error not in", values, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorBetween(Integer value1, Integer value2) {
            addCriterion("ch4_error between", value1, value2, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andCh4ErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("ch4_error not between", value1, value2, "ch4Error");
            return (Criteria) this;
        }

        public Criteria andTErrorIsNull() {
            addCriterion("t_error is null");
            return (Criteria) this;
        }

        public Criteria andTErrorIsNotNull() {
            addCriterion("t_error is not null");
            return (Criteria) this;
        }

        public Criteria andTErrorEqualTo(Integer value) {
            addCriterion("t_error =", value, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorNotEqualTo(Integer value) {
            addCriterion("t_error <>", value, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorGreaterThan(Integer value) {
            addCriterion("t_error >", value, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("t_error >=", value, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorLessThan(Integer value) {
            addCriterion("t_error <", value, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorLessThanOrEqualTo(Integer value) {
            addCriterion("t_error <=", value, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorIn(List<Integer> values) {
            addCriterion("t_error in", values, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorNotIn(List<Integer> values) {
            addCriterion("t_error not in", values, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorBetween(Integer value1, Integer value2) {
            addCriterion("t_error between", value1, value2, "tError");
            return (Criteria) this;
        }

        public Criteria andTErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("t_error not between", value1, value2, "tError");
            return (Criteria) this;
        }

        public Criteria andHErrorIsNull() {
            addCriterion("h_error is null");
            return (Criteria) this;
        }

        public Criteria andHErrorIsNotNull() {
            addCriterion("h_error is not null");
            return (Criteria) this;
        }

        public Criteria andHErrorEqualTo(Integer value) {
            addCriterion("h_error =", value, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorNotEqualTo(Integer value) {
            addCriterion("h_error <>", value, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorGreaterThan(Integer value) {
            addCriterion("h_error >", value, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("h_error >=", value, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorLessThan(Integer value) {
            addCriterion("h_error <", value, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorLessThanOrEqualTo(Integer value) {
            addCriterion("h_error <=", value, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorIn(List<Integer> values) {
            addCriterion("h_error in", values, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorNotIn(List<Integer> values) {
            addCriterion("h_error not in", values, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorBetween(Integer value1, Integer value2) {
            addCriterion("h_error between", value1, value2, "hError");
            return (Criteria) this;
        }

        public Criteria andHErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("h_error not between", value1, value2, "hError");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andO2ErrorIsNull() {
            addCriterion("o2_error is null");
            return (Criteria) this;
        }

        public Criteria andO2ErrorIsNotNull() {
            addCriterion("o2_error is not null");
            return (Criteria) this;
        }

        public Criteria andO2ErrorEqualTo(Integer value) {
            addCriterion("o2_error =", value, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorNotEqualTo(Integer value) {
            addCriterion("o2_error <>", value, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorGreaterThan(Integer value) {
            addCriterion("o2_error >", value, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorGreaterThanOrEqualTo(Integer value) {
            addCriterion("o2_error >=", value, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorLessThan(Integer value) {
            addCriterion("o2_error <", value, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorLessThanOrEqualTo(Integer value) {
            addCriterion("o2_error <=", value, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorIn(List<Integer> values) {
            addCriterion("o2_error in", values, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorNotIn(List<Integer> values) {
            addCriterion("o2_error not in", values, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorBetween(Integer value1, Integer value2) {
            addCriterion("o2_error between", value1, value2, "o2Error");
            return (Criteria) this;
        }

        public Criteria andO2ErrorNotBetween(Integer value1, Integer value2) {
            addCriterion("o2_error not between", value1, value2, "o2Error");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table malfunction
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table malfunction
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
