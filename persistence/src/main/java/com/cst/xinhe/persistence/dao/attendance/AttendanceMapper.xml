<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.attendance.AttendanceMapper">
  <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.attendance.Attendance">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="attendance_id" jdbcType="VARCHAR" property="attendanceId" />
    <result column="base_station_id" jdbcType="INTEGER" property="baseStationId" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="rule_id" jdbcType="INTEGER" property="ruleId" />
    <result column="backup1" jdbcType="VARCHAR" property="backup1" />
    <result column="backup2" jdbcType="VARCHAR" property="backup2" />
    <result column="in_ore" jdbcType="TIMESTAMP" property="inOre" />
    <result column="out_ore" jdbcType="TIMESTAMP" property="outOre" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    attendance_id, base_station_id, staff_id, start_time, end_time, remarks, rule_id,
    backup1, backup2, in_ore, out_ore
  </sql>
  <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.attendance.AttendanceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from attendance
    where attendance_id = #{attendanceId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from attendance
    where attendance_id = #{attendanceId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.attendance.AttendanceExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cst.xinhe.persistence.model.attendance.Attendance">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into attendance (attendance_id, base_station_id, staff_id,
      start_time, end_time, remarks,
      rule_id, backup1, backup2,
      in_ore, out_ore)
    values (#{attendanceId,jdbcType=VARCHAR}, #{baseStationId,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER},
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR},
      #{ruleId,jdbcType=INTEGER}, #{backup1,jdbcType=VARCHAR}, #{backup2,jdbcType=VARCHAR},
      #{inOre,jdbcType=TIMESTAMP}, #{outOre,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.attendance.Attendance">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into attendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attendanceId != null">
        attendance_id,
      </if>
      <if test="baseStationId != null">
        base_station_id,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="ruleId != null">
        rule_id,
      </if>
      <if test="backup1 != null">
        backup1,
      </if>
      <if test="backup2 != null">
        backup2,
      </if>
      <if test="inOre != null">
        in_ore,
      </if>
      <if test="outOre != null">
        out_ore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attendanceId != null">
        #{attendanceId,jdbcType=VARCHAR},
      </if>
      <if test="baseStationId != null">
        #{baseStationId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="ruleId != null">
        #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="backup1 != null">
        #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="inOre != null">
        #{inOre,jdbcType=TIMESTAMP},
      </if>
      <if test="outOre != null">
        #{outOre,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.attendance.AttendanceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from attendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update attendance
    <set>
      <if test="record.attendanceId != null">
        attendance_id = #{record.attendanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.baseStationId != null">
        base_station_id = #{record.baseStationId,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.ruleId != null">
        rule_id = #{record.ruleId,jdbcType=INTEGER},
      </if>
      <if test="record.backup1 != null">
        backup1 = #{record.backup1,jdbcType=VARCHAR},
      </if>
      <if test="record.backup2 != null">
        backup2 = #{record.backup2,jdbcType=VARCHAR},
      </if>
      <if test="record.inOre != null">
        in_ore = #{record.inOre,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outOre != null">
        out_ore = #{record.outOre,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update attendance
    set attendance_id = #{record.attendanceId,jdbcType=VARCHAR},
      base_station_id = #{record.baseStationId,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      rule_id = #{record.ruleId,jdbcType=INTEGER},
      backup1 = #{record.backup1,jdbcType=VARCHAR},
      backup2 = #{record.backup2,jdbcType=VARCHAR},
      in_ore = #{record.inOre,jdbcType=TIMESTAMP},
      out_ore = #{record.outOre,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.attendance.Attendance">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update attendance
    <set>
      <if test="baseStationId != null">
        base_station_id = #{baseStationId,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="ruleId != null">
        rule_id = #{ruleId,jdbcType=INTEGER},
      </if>
      <if test="backup1 != null">
        backup1 = #{backup1,jdbcType=VARCHAR},
      </if>
      <if test="backup2 != null">
        backup2 = #{backup2,jdbcType=VARCHAR},
      </if>
      <if test="inOre != null">
        in_ore = #{inOre,jdbcType=TIMESTAMP},
      </if>
      <if test="outOre != null">
        out_ore = #{outOre,jdbcType=TIMESTAMP},
      </if>
    </set>
    where attendance_id = #{attendanceId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.attendance.Attendance">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update attendance
    set base_station_id = #{baseStationId,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      rule_id = #{ruleId,jdbcType=INTEGER},
      backup1 = #{backup1,jdbcType=VARCHAR},
      backup2 = #{backup2,jdbcType=VARCHAR},
      in_ore = #{inOre,jdbcType=TIMESTAMP},
      out_ore = #{outOre,jdbcType=TIMESTAMP}
    where attendance_id = #{attendanceId,jdbcType=VARCHAR}
  </update>

  <select id="selectAttendanceInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT * FROM attendance
INNER JOIN staff ON staff.staff_id = attendance.staff_id
INNER JOIN staff_group ON staff.group_id = staff_group.group_id
INNER JOIN base_station ON attendance.base_station_id = base_station.base_station_id
<where>
  <if test="deptId != null and '' neq deptId">
      AND staff_group.dept_id = #{deptId}
  </if>
  <if test="groupId != null and '' neq groupId">
    AND staff_group.group_id = #{groupId}
  </if>findRecentlyGasInfoByStaffId/
  <if test="staffId != null and '' neq staffId">
    AND staff.staff_id = #{staffId}
  </if>
  <if test="startTime != null and '' neq startTime">
    AND attendance.start_time = #{startTime}
  </if>
  <if test="staffName != null and staffName neq '' and staffName neq null ">
    AND staff.staff_name LIKE CONCAT('%',#{staffName},'%')
  </if>
</where>
  </select>

  <select id="findAttendanceByStaffIdAndEndTimeIsNull" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from attendance  where staff_id=#{staffId} AND end_time IS NULL AND out_ore IS NULL
    ORDER BY start_time DESC limit 1

  </select>

  <select id="selectAttendanceInfoByParams" parameterType="com.cst.xinhe.persistence.vo.req.AttendanceParamsVO" resultType="com.cst.xinhe.persistence.vo.resp.AttendanceInfoVO">
    SELECT
    time_standard.time_standard_name AS timeStandardName,
    backup1 AS backUp1,
    backup2 AS backUp2,
	attendance_id AS attendanceId,
	staff.staff_id AS staffId,
	staff_job.job_name AS jobName,
	staff_name AS staffName,
	base_station.base_station_name AS stationName,
	attendance.start_time AS startTime,
	attendance.end_time AS endTime,
	attendance.in_ore AS inOre,
	attendance.out_ore AS outOre,
	staff.group_id AS orgId
    FROM
	  attendance
    INNER JOIN staff ON staff.staff_id = attendance.staff_id
    INNER JOIN base_station ON base_station.base_station_num = attendance.base_station_id,
      staff_organization,
      staff_job,
      time_standard
    <where>
         staff.group_id = staff_organization.id
        AND
         staff_job.job_id = staff.staff_job_id
        AND
         attendance.rule_id = time_standard.time_standard_id
        <if test="currentDate != null ">
          AND #{currentDate} &gt;= attendance.start_time
          AND
          #{currentDate} &lt;= attendance.end_time
        </if>
        <if test="startTime != null  and endTime != null  ">
          AND #{startTime} &lt;= attendance.start_time
          AND
          #{endTime} &gt; attendance.end_time
        </if>
        <if test="orgId != null and orgId neq '' ">
          AND staff.group_id IN
          <foreach close=")" collection="staffIdOfList" index="index" item="item" open="(" separator=",">
            #{item}
          </foreach>
        </if>
        <if test="timeStandardId != null and timeStandardId neq '' ">
          AND attendance.rule_id = #{timeStandardId}
        </if>
        <if test="staffName != null and staffName neq '' ">
          AND staff.staff_name LIKE CONCAT('%',#{staffName},'%')
        </if>
      <if test="jobType != null and jobType neq '' ">
        AND staff_job.job_id = #{jobType}
      </if>
    </where>
  </select>
</mapper>
