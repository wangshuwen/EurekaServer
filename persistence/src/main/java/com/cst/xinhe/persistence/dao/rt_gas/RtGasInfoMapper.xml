<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.rt_gas.RtGasInfoMapper">
    <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.rt_gas.RtGasInfo">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="rt_gas_info_id" jdbcType="INTEGER" property="rtGasInfoId"/>
        <result column="co" jdbcType="DOUBLE" property="co"/>
        <result column="co_unit" jdbcType="INTEGER" property="coUnit"/>
        <result column="ch4" jdbcType="DOUBLE" property="ch4"/>
        <result column="ch4_unit" jdbcType="INTEGER" property="ch4Unit"/>
        <result column="o2" jdbcType="DOUBLE" property="o2"/>
        <result column="o2_unit" jdbcType="INTEGER" property="o2Unit"/>
        <result column="co2" jdbcType="DOUBLE" property="co2"/>
        <result column="co2_unit" jdbcType="INTEGER" property="co2Unit"/>
        <result column="temperature" jdbcType="DOUBLE" property="temperature"/>
        <result column="temperature_unit" jdbcType="INTEGER" property="temperatureUnit"/>
        <result column="humidity" jdbcType="DOUBLE" property="humidity"/>
        <result column="humidity_unit" jdbcType="INTEGER" property="humidityUnit"/>
        <result column="field_3" jdbcType="DOUBLE" property="field3"/>
        <result column="field_3_unit" jdbcType="INTEGER" property="field3Unit"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="terminal_id" jdbcType="INTEGER" property="terminalId"/>
        <result column="station_id" jdbcType="INTEGER" property="stationId"/>
        <result column="terminal_ip" jdbcType="VARCHAR" property="terminalIp"/>
        <result column="station_ip" jdbcType="VARCHAR" property="stationIp"/>
        <result column="terminal_real_time" jdbcType="TIMESTAMP" property="terminalRealTime"/>
        <result column="info_type" jdbcType="BIT" property="infoType"/>
        <result column="sequence_id" jdbcType="INTEGER" property="sequenceId"/>
        <result column="position_id" jdbcType="INTEGER" property="positionId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        rt_gas_info_id, co, co_unit, ch4, ch4_unit, o2, o2_unit, co2, co2_unit, temperature,
        temperature_unit, humidity, humidity_unit, field_3, field_3_unit, create_time, terminal_id,
        station_id, terminal_ip, station_ip, terminal_real_time, info_type, sequence_id,
        position_id
    </sql>
    <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfoExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from rt_gas_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from rt_gas_info
        where rt_gas_info_id = #{rtGasInfoId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from rt_gas_info
        where rt_gas_info_id = #{rtGasInfoId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfoExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from rt_gas_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfo" useGeneratedKeys="true" keyProperty="rtGasInfoId">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into rt_gas_info (rt_gas_info_id, co, co_unit,
        ch4, ch4_unit, o2, o2_unit,
        co2, co2_unit, temperature,
        temperature_unit, humidity, humidity_unit,
        field_3, field_3_unit, create_time,
        terminal_id, station_id, terminal_ip,
        station_ip, terminal_real_time, info_type,
        sequence_id, position_id)
        values (#{rtGasInfoId,jdbcType=INTEGER}, #{co,jdbcType=DOUBLE}, #{coUnit,jdbcType=INTEGER},
        #{ch4,jdbcType=DOUBLE}, #{ch4Unit,jdbcType=INTEGER}, #{o2,jdbcType=DOUBLE}, #{o2Unit,jdbcType=INTEGER},
        #{co2,jdbcType=DOUBLE}, #{co2Unit,jdbcType=INTEGER}, #{temperature,jdbcType=DOUBLE},
        #{temperatureUnit,jdbcType=INTEGER}, #{humidity,jdbcType=DOUBLE}, #{humidityUnit,jdbcType=INTEGER},
        #{field3,jdbcType=DOUBLE}, #{field3Unit,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{terminalId,jdbcType=INTEGER}, #{stationId,jdbcType=INTEGER}, #{terminalIp,jdbcType=VARCHAR},
        #{stationIp,jdbcType=VARCHAR}, #{terminalRealTime,jdbcType=TIMESTAMP}, #{infoType,jdbcType=BIT},
        #{sequenceId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfo">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into rt_gas_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="rtGasInfoId != null">
                rt_gas_info_id,
            </if>
            <if test="co != null">
                co,
            </if>
            <if test="coUnit != null">
                co_unit,
            </if>
            <if test="ch4 != null">
                ch4,
            </if>
            <if test="ch4Unit != null">
                ch4_unit,
            </if>
            <if test="o2 != null">
                o2,
            </if>
            <if test="o2Unit != null">
                o2_unit,
            </if>
            <if test="co2 != null">
                co2,
            </if>
            <if test="co2Unit != null">
                co2_unit,
            </if>
            <if test="temperature != null">
                temperature,
            </if>
            <if test="temperatureUnit != null">
                temperature_unit,
            </if>
            <if test="humidity != null">
                humidity,
            </if>
            <if test="humidityUnit != null">
                humidity_unit,
            </if>
            <if test="field3 != null">
                field_3,
            </if>
            <if test="field3Unit != null">
                field_3_unit,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="terminalId != null">
                terminal_id,
            </if>
            <if test="stationId != null">
                station_id,
            </if>
            <if test="terminalIp != null">
                terminal_ip,
            </if>
            <if test="stationIp != null">
                station_ip,
            </if>
            <if test="terminalRealTime != null">
                terminal_real_time,
            </if>
            <if test="infoType != null">
                info_type,
            </if>
            <if test="sequenceId != null">
                sequence_id,
            </if>
            <if test="positionId != null">
                position_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="rtGasInfoId != null">
                #{rtGasInfoId,jdbcType=INTEGER},
            </if>
            <if test="co != null">
                #{co,jdbcType=DOUBLE},
            </if>
            <if test="coUnit != null">
                #{coUnit,jdbcType=INTEGER},
            </if>
            <if test="ch4 != null">
                #{ch4,jdbcType=DOUBLE},
            </if>
            <if test="ch4Unit != null">
                #{ch4Unit,jdbcType=INTEGER},
            </if>
            <if test="o2 != null">
                #{o2,jdbcType=DOUBLE},
            </if>
            <if test="o2Unit != null">
                #{o2Unit,jdbcType=INTEGER},
            </if>
            <if test="co2 != null">
                #{co2,jdbcType=DOUBLE},
            </if>
            <if test="co2Unit != null">
                #{co2Unit,jdbcType=INTEGER},
            </if>
            <if test="temperature != null">
                #{temperature,jdbcType=DOUBLE},
            </if>
            <if test="temperatureUnit != null">
                #{temperatureUnit,jdbcType=INTEGER},
            </if>
            <if test="humidity != null">
                #{humidity,jdbcType=DOUBLE},
            </if>
            <if test="humidityUnit != null">
                #{humidityUnit,jdbcType=INTEGER},
            </if>
            <if test="field3 != null">
                #{field3,jdbcType=DOUBLE},
            </if>
            <if test="field3Unit != null">
                #{field3Unit,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="terminalId != null">
                #{terminalId,jdbcType=INTEGER},
            </if>
            <if test="stationId != null">
                #{stationId,jdbcType=INTEGER},
            </if>
            <if test="terminalIp != null">
                #{terminalIp,jdbcType=VARCHAR},
            </if>
            <if test="stationIp != null">
                #{stationIp,jdbcType=VARCHAR},
            </if>
            <if test="terminalRealTime != null">
                #{terminalRealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="infoType != null">
                #{infoType,jdbcType=BIT},
            </if>
            <if test="sequenceId != null">
                #{sequenceId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                #{positionId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfoExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from rt_gas_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update rt_gas_info
        <set>
            <if test="record.rtGasInfoId != null">
                rt_gas_info_id = #{record.rtGasInfoId,jdbcType=INTEGER},
            </if>
            <if test="record.co != null">
                co = #{record.co,jdbcType=DOUBLE},
            </if>
            <if test="record.coUnit != null">
                co_unit = #{record.coUnit,jdbcType=INTEGER},
            </if>
            <if test="record.ch4 != null">
                ch4 = #{record.ch4,jdbcType=DOUBLE},
            </if>
            <if test="record.ch4Unit != null">
                ch4_unit = #{record.ch4Unit,jdbcType=INTEGER},
            </if>
            <if test="record.o2 != null">
                o2 = #{record.o2,jdbcType=DOUBLE},
            </if>
            <if test="record.o2Unit != null">
                o2_unit = #{record.o2Unit,jdbcType=INTEGER},
            </if>
            <if test="record.co2 != null">
                co2 = #{record.co2,jdbcType=DOUBLE},
            </if>
            <if test="record.co2Unit != null">
                co2_unit = #{record.co2Unit,jdbcType=INTEGER},
            </if>
            <if test="record.temperature != null">
                temperature = #{record.temperature,jdbcType=DOUBLE},
            </if>
            <if test="record.temperatureUnit != null">
                temperature_unit = #{record.temperatureUnit,jdbcType=INTEGER},
            </if>
            <if test="record.humidity != null">
                humidity = #{record.humidity,jdbcType=DOUBLE},
            </if>
            <if test="record.humidityUnit != null">
                humidity_unit = #{record.humidityUnit,jdbcType=INTEGER},
            </if>
            <if test="record.field3 != null">
                field_3 = #{record.field3,jdbcType=DOUBLE},
            </if>
            <if test="record.field3Unit != null">
                field_3_unit = #{record.field3Unit,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.terminalId != null">
                terminal_id = #{record.terminalId,jdbcType=INTEGER},
            </if>
            <if test="record.stationId != null">
                station_id = #{record.stationId,jdbcType=INTEGER},
            </if>
            <if test="record.terminalIp != null">
                terminal_ip = #{record.terminalIp,jdbcType=VARCHAR},
            </if>
            <if test="record.stationIp != null">
                station_ip = #{record.stationIp,jdbcType=VARCHAR},
            </if>
            <if test="record.terminalRealTime != null">
                terminal_real_time = #{record.terminalRealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.infoType != null">
                info_type = #{record.infoType,jdbcType=BIT},
            </if>
            <if test="record.sequenceId != null">
                sequence_id = #{record.sequenceId,jdbcType=INTEGER},
            </if>
            <if test="record.positionId != null">
                position_id = #{record.positionId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update rt_gas_info
        set rt_gas_info_id = #{record.rtGasInfoId,jdbcType=INTEGER},
        co = #{record.co,jdbcType=DOUBLE},
        co_unit = #{record.coUnit,jdbcType=INTEGER},
        ch4 = #{record.ch4,jdbcType=DOUBLE},
        ch4_unit = #{record.ch4Unit,jdbcType=INTEGER},
        o2 = #{record.o2,jdbcType=DOUBLE},
        o2_unit = #{record.o2Unit,jdbcType=INTEGER},
        co2 = #{record.co2,jdbcType=DOUBLE},
        co2_unit = #{record.co2Unit,jdbcType=INTEGER},
        temperature = #{record.temperature,jdbcType=DOUBLE},
        temperature_unit = #{record.temperatureUnit,jdbcType=INTEGER},
        humidity = #{record.humidity,jdbcType=DOUBLE},
        humidity_unit = #{record.humidityUnit,jdbcType=INTEGER},
        field_3 = #{record.field3,jdbcType=DOUBLE},
        field_3_unit = #{record.field3Unit,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        terminal_id = #{record.terminalId,jdbcType=INTEGER},
        station_id = #{record.stationId,jdbcType=INTEGER},
        terminal_ip = #{record.terminalIp,jdbcType=VARCHAR},
        station_ip = #{record.stationIp,jdbcType=VARCHAR},
        terminal_real_time = #{record.terminalRealTime,jdbcType=TIMESTAMP},
        info_type = #{record.infoType,jdbcType=BIT},
        sequence_id = #{record.sequenceId,jdbcType=INTEGER},
        position_id = #{record.positionId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfo">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update rt_gas_info
        <set>
            <if test="co != null">
                co = #{co,jdbcType=DOUBLE},
            </if>
            <if test="coUnit != null">
                co_unit = #{coUnit,jdbcType=INTEGER},
            </if>
            <if test="ch4 != null">
                ch4 = #{ch4,jdbcType=DOUBLE},
            </if>
            <if test="ch4Unit != null">
                ch4_unit = #{ch4Unit,jdbcType=INTEGER},
            </if>
            <if test="o2 != null">
                o2 = #{o2,jdbcType=DOUBLE},
            </if>
            <if test="o2Unit != null">
                o2_unit = #{o2Unit,jdbcType=INTEGER},
            </if>
            <if test="co2 != null">
                co2 = #{co2,jdbcType=DOUBLE},
            </if>
            <if test="co2Unit != null">
                co2_unit = #{co2Unit,jdbcType=INTEGER},
            </if>
            <if test="temperature != null">
                temperature = #{temperature,jdbcType=DOUBLE},
            </if>
            <if test="temperatureUnit != null">
                temperature_unit = #{temperatureUnit,jdbcType=INTEGER},
            </if>
            <if test="humidity != null">
                humidity = #{humidity,jdbcType=DOUBLE},
            </if>
            <if test="humidityUnit != null">
                humidity_unit = #{humidityUnit,jdbcType=INTEGER},
            </if>
            <if test="field3 != null">
                field_3 = #{field3,jdbcType=DOUBLE},
            </if>
            <if test="field3Unit != null">
                field_3_unit = #{field3Unit,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="terminalId != null">
                terminal_id = #{terminalId,jdbcType=INTEGER},
            </if>
            <if test="stationId != null">
                station_id = #{stationId,jdbcType=INTEGER},
            </if>
            <if test="terminalIp != null">
                terminal_ip = #{terminalIp,jdbcType=VARCHAR},
            </if>
            <if test="stationIp != null">
                station_ip = #{stationIp,jdbcType=VARCHAR},
            </if>
            <if test="terminalRealTime != null">
                terminal_real_time = #{terminalRealTime,jdbcType=TIMESTAMP},
            </if>
            <if test="infoType != null">
                info_type = #{infoType,jdbcType=BIT},
            </if>
            <if test="sequenceId != null">
                sequence_id = #{sequenceId,jdbcType=INTEGER},
            </if>
            <if test="positionId != null">
                position_id = #{positionId,jdbcType=INTEGER},
            </if>
        </set>
        where rt_gas_info_id = #{rtGasInfoId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.rt_gas.RtGasInfo">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update rt_gas_info
        set co = #{co,jdbcType=DOUBLE},
        co_unit = #{coUnit,jdbcType=INTEGER},
        ch4 = #{ch4,jdbcType=DOUBLE},
        ch4_unit = #{ch4Unit,jdbcType=INTEGER},
        o2 = #{o2,jdbcType=DOUBLE},
        o2_unit = #{o2Unit,jdbcType=INTEGER},
        co2 = #{co2,jdbcType=DOUBLE},
        co2_unit = #{co2Unit,jdbcType=INTEGER},
        temperature = #{temperature,jdbcType=DOUBLE},
        temperature_unit = #{temperatureUnit,jdbcType=INTEGER},
        humidity = #{humidity,jdbcType=DOUBLE},
        humidity_unit = #{humidityUnit,jdbcType=INTEGER},
        field_3 = #{field3,jdbcType=DOUBLE},
        field_3_unit = #{field3Unit,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        terminal_id = #{terminalId,jdbcType=INTEGER},
        station_id = #{stationId,jdbcType=INTEGER},
        terminal_ip = #{terminalIp,jdbcType=VARCHAR},
        station_ip = #{stationIp,jdbcType=VARCHAR},
        terminal_real_time = #{terminalRealTime,jdbcType=TIMESTAMP},
        info_type = #{infoType,jdbcType=BIT},
        sequence_id = #{sequenceId,jdbcType=INTEGER},
        position_id = #{positionId,jdbcType=INTEGER}
        where rt_gas_info_id = #{rtGasInfoId,jdbcType=INTEGER}
    </update>

    <!--&amp;amp;amp;lt;resultMap id="GasInfoOfUserMap" type=""&amp;amp;amp;gt;-->


    <!--&amp;amp;amp;lt;/resultMap&amp;amp;amp;gt;-->

    <!--&amp;amp;amp;lt;select id="selectGasInfoByStaffName" parameterType="java.lang.String" resultMap="GasInfoOfUserMap"&amp;amp;amp;gt;-->
    <!--SELECT * FROM staff JOIN WHERE staff.staff_name-->
    <!--&amp;amp;amp;lt;/select&amp;amp;amp;gt;-->
    <resultMap id="GasWSRespVOMap" type="com.cst.xinhe.persistence.vo.resp.GasWSRespVO">
        <id column="staff_id" property="staffId"/>
        <result column="o2" property="o2"/>
        <result column="o2_unit" property="o2_type"/>
        <result column="co" property="co"/>
        <result column="co_unit" property="co_type"/>
        <result column="co2" property="co2"/>
        <result column="co2_unit" property="co2_type"/>
        <result column="ch4" property="ch4"/>
        <result column="ch4_unit" property="ch4_type"/>
        <result column="humidity" property="Humidity"/>
        <result column="humidity_unit" property="Humidity_type"/>
        <result column="temperature" property="temperature"/>
        <result column="temperature_unit" property="Temperature_type"/>
        <result column="sequence_id" property="sequenceId"/>
        <result column="terminal_real_time" property="rt"/>
        <result column="create_time" property="createTime"/>
        <result column="temp_position_name" property="tempRoadName"/>
        <association property="staffName" column="staff_id" select="com.cst.xinhe.persistence.dao.staff.StaffMapper.selectStaffNameById"/>
        <association property="staffNumber" column="staff_id" select="com.cst.xinhe.persistence.dao.staff.StaffMapper.selectStaffNumberById"/>
    </resultMap>

    <select id="selectGasRoadByStaffId" resultMap="GasWSRespVOMap">
       SELECT staff_id,o2,o2_unit,co,co_unit,co2,co2_unit,ch4,ch4_unit,humidity,
       humidity_unit,temperature,humidity_unit,temperature,temperature_unit,sequence_id,
       terminal_real_time,create_time,temp_position_name
        FROM rt_gas_info INNER JOIN terminal_road ON terminal_road_id = position_id
        WHERE staff_id = #{staff_id}
        ORDER BY terminal_real_time DESC
    </select>

    <select id="selectGasInfoByRecently" resultMap="GasWSRespVOMap">
        SELECT staff_id,o2,o2_unit,co,co_unit,co2,co2_unit,ch4,ch4_unit,humidity,
       humidity_unit,temperature,humidity_unit,temperature,temperature_unit,sequence_id,
       terminal_real_time,create_time,temp_position_name
        FROM rt_gas_info INNER JOIN terminal_road ON terminal_road_id = position_id
        ORDER BY rt_gas_info_id DESC
    </select>

    <select id="selectGasInfoByTerminalLastTime" resultType="java.util.Map" parameterType="java.lang.Integer">
        SELECT
        <include refid="Base_Column_List"/>
        FROM rt_gas_info
        WHERE terminal_id = #{terminalId}
        ORDER BY terminal_real_time DESC
        limit 1
    </select>

    <select id="selectGasInfoLastTenRecords" resultType="java.util.HashMap">
        SELECT b.staff_name as staff_name,b.staff_id as staff_id,b.group_id as group_id,
        a.rt_gas_info_id AS rtGasInfoId,  a.co,  a.co_unit,  a.ch4,  a.ch4_unit,  a.o2,  a.o2_unit,  a.co2,  a.co2_unit,  a.temperature,
         a.temperature_unit,  a.humidity,  a.humidity_unit,  a.field_3,  a.field_3_unit,  a.create_time,  a.terminal_id,
         a.station_id,  a.terminal_ip,  a.station_ip,  a.terminal_real_time,  a.info_type,  a.sequence_id,
         a.position_id, d.temp_position_name as tempPositionName
        FROM rt_gas_info a ,staff b, staff_terminal c, terminal_road d
        WHERE
        d.staff_terminal_id = c.terminal_id
        AND d.staff_id = b.staff_id
        AND d.terminal_road_id = a.position_id
        ORDER BY a.rt_gas_info_id DESC LIMIT #{number}
    </select>

    <select id="selectGasInfoLastTenData" resultType="java.util.HashMap">
        SELECT  a.rt_gas_info_id AS rtGasInfoId,  a.co,  a.co_unit,  a.ch4,  a.ch4_unit,  a.o2,  a.o2_unit,  a.co2,  a.co2_unit,  a.temperature,
         a.temperature_unit,  a.humidity,  a.humidity_unit,  a.field_3,  a.field_3_unit,  a.create_time,  a.terminal_id,
         a.station_id,  a.terminal_ip,  a.station_ip,  a.terminal_real_time,  a.info_type,  a.sequence_id,
         a.position_id
        FROM rt_gas_info a
        ORDER BY a.rt_gas_info_id DESC LIMIT #{number}
    </select>
    <select id="selectAllGasFaultNum" resultType="java.util.HashMap">
        SELECT
	count(CASE WHEN co_unit = 1  then 1 else null end) coNum,
	count(CASE WHEN o2_unit = 1  then 1 else null end) o2Num,
	count(CASE WHEN co2_unit = 1  then 1 else null end) co2Num,
	count(CASE WHEN ch4_unit = 1  then 1 else null end) ch4Num
        FROM
	rt_gas_info
    </select>

    <select id="findRecentlyGasInfoByStaffId" resultType="java.util.HashMap">
        SELECT *  FROM rt_gas_info r
        left join staff_terminal s on r.terminal_id = s.terminal_id
        left join terminal_road t on r.position_id = t.terminal_road_id
        where s.staff_id = #{staffId}
        order by rt_gas_info_id desc limit 1
    </select>


</mapper>
