<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.warn_level.GasStandardMapper">
  <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.warn_level.GasStandard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="standard_id" jdbcType="INTEGER" property="standardId" />
    <result column="standard_name" jdbcType="VARCHAR" property="standardName" />
    <result column="standard_desc" jdbcType="VARCHAR" property="standardDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="o2_standard" jdbcType="DOUBLE" property="o2Standard" />
    <result column="co_standard" jdbcType="DOUBLE" property="coStandard" />
    <result column="ch4_standard" jdbcType="DOUBLE" property="ch4Standard" />
    <result column="t_standard" jdbcType="DOUBLE" property="tStandard" />
    <result column="h_standard" jdbcType="DOUBLE" property="hStandard" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    standard_id, standard_name, standard_desc, create_time, update_time, user_id, o2_standard,
    co_standard, ch4_standard, t_standard, h_standard
  </sql>
  <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandardExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gas_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from gas_standard
    where standard_id = #{standardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gas_standard
    where standard_id = #{standardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandardExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gas_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gas_standard (standard_id, standard_name, standard_desc,
      create_time, update_time, user_id,
      o2_standard, co_standard, ch4_standard,
      t_standard, h_standard)
    values (#{standardId,jdbcType=INTEGER}, #{standardName,jdbcType=VARCHAR}, #{standardDesc,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER},
      #{o2Standard,jdbcType=DOUBLE}, #{coStandard,jdbcType=DOUBLE}, #{ch4Standard,jdbcType=DOUBLE},
      #{tStandard,jdbcType=DOUBLE}, #{hStandard,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gas_standard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="standardId != null">
        standard_id,
      </if>
      <if test="standardName != null">
        standard_name,
      </if>
      <if test="standardDesc != null">
        standard_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="o2Standard != null">
        o2_standard,
      </if>
      <if test="coStandard != null">
        co_standard,
      </if>
      <if test="ch4Standard != null">
        ch4_standard,
      </if>
      <if test="tStandard != null">
        t_standard,
      </if>
      <if test="hStandard != null">
        h_standard,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="standardId != null">
        #{standardId,jdbcType=INTEGER},
      </if>
      <if test="standardName != null">
        #{standardName,jdbcType=VARCHAR},
      </if>
      <if test="standardDesc != null">
        #{standardDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="o2Standard != null">
        #{o2Standard,jdbcType=DOUBLE},
      </if>
      <if test="coStandard != null">
        #{coStandard,jdbcType=DOUBLE},
      </if>
      <if test="ch4Standard != null">
        #{ch4Standard,jdbcType=DOUBLE},
      </if>
      <if test="tStandard != null">
        #{tStandard,jdbcType=DOUBLE},
      </if>
      <if test="hStandard != null">
        #{hStandard,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandardExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from gas_standard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_standard
    <set>
      <if test="record.standardId != null">
        standard_id = #{record.standardId,jdbcType=INTEGER},
      </if>
      <if test="record.standardName != null">
        standard_name = #{record.standardName,jdbcType=VARCHAR},
      </if>
      <if test="record.standardDesc != null">
        standard_desc = #{record.standardDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.o2Standard != null">
        o2_standard = #{record.o2Standard,jdbcType=DOUBLE},
      </if>
      <if test="record.coStandard != null">
        co_standard = #{record.coStandard,jdbcType=DOUBLE},
      </if>
      <if test="record.ch4Standard != null">
        ch4_standard = #{record.ch4Standard,jdbcType=DOUBLE},
      </if>
      <if test="record.tStandard != null">
        t_standard = #{record.tStandard,jdbcType=DOUBLE},
      </if>
      <if test="record.hStandard != null">
        h_standard = #{record.hStandard,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_standard
    set standard_id = #{record.standardId,jdbcType=INTEGER},
      standard_name = #{record.standardName,jdbcType=VARCHAR},
      standard_desc = #{record.standardDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      o2_standard = #{record.o2Standard,jdbcType=DOUBLE},
      co_standard = #{record.coStandard,jdbcType=DOUBLE},
      ch4_standard = #{record.ch4Standard,jdbcType=DOUBLE},
      t_standard = #{record.tStandard,jdbcType=DOUBLE},
      h_standard = #{record.hStandard,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_standard
    <set>
      <if test="standardName != null">
        standard_name = #{standardName,jdbcType=VARCHAR},
      </if>
      <if test="standardDesc != null">
        standard_desc = #{standardDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="o2Standard != null">
        o2_standard = #{o2Standard,jdbcType=DOUBLE},
      </if>
      <if test="coStandard != null">
        co_standard = #{coStandard,jdbcType=DOUBLE},
      </if>
      <if test="ch4Standard != null">
        ch4_standard = #{ch4Standard,jdbcType=DOUBLE},
      </if>
      <if test="tStandard != null">
        t_standard = #{tStandard,jdbcType=DOUBLE},
      </if>
      <if test="hStandard != null">
        h_standard = #{hStandard,jdbcType=DOUBLE},
      </if>
    </set>
    where standard_id = #{standardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.warn_level.GasStandard">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_standard
    set standard_name = #{standardName,jdbcType=VARCHAR},
      standard_desc = #{standardDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      o2_standard = #{o2Standard,jdbcType=DOUBLE},
      co_standard = #{coStandard,jdbcType=DOUBLE},
      ch4_standard = #{ch4Standard,jdbcType=DOUBLE},
      t_standard = #{tStandard,jdbcType=DOUBLE},
      h_standard = #{hStandard,jdbcType=DOUBLE}
    where standard_id = #{standardId,jdbcType=INTEGER}
  </update>
</mapper>
