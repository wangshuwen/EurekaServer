<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.warn_level.GasWarnSettingMapper">
  <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.warn_level.GasWarnSetting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="gas_warn_setting_id" jdbcType="INTEGER" property="gasWarnSettingId" />
    <result column="gas_type" jdbcType="INTEGER" property="gasType" />
    <result column="warn_level_id" jdbcType="INTEGER" property="warnLevelId" />
    <result column="multiple" jdbcType="DOUBLE" property="multiple" />
    <result column="lower_limit" jdbcType="DOUBLE" property="lowerLimit" />
    <result column="upper_limit" jdbcType="DOUBLE" property="upperLimit" />
    <result column="lower_continued_time" jdbcType="INTEGER" property="lowerContinuedTime" />
    <result column="upper_continued_time" jdbcType="INTEGER" property="upperContinuedTime" />
    <result column="standard_id" jdbcType="INTEGER" property="standardId" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    gas_warn_setting_id, gas_type, warn_level_id, multiple, lower_limit, upper_limit,
    lower_continued_time, upper_continued_time, standard_id
  </sql>
  <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSettingExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gas_warn_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from gas_warn_setting
    where gas_warn_setting_id = #{gasWarnSettingId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gas_warn_setting
    where gas_warn_setting_id = #{gasWarnSettingId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSettingExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gas_warn_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSetting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gas_warn_setting (gas_warn_setting_id, gas_type, warn_level_id,
      multiple, lower_limit, upper_limit,
      lower_continued_time, upper_continued_time,
      standard_id)
    values (#{gasWarnSettingId,jdbcType=INTEGER}, #{gasType,jdbcType=INTEGER}, #{warnLevelId,jdbcType=INTEGER},
      #{multiple,jdbcType=DOUBLE}, #{lowerLimit,jdbcType=DOUBLE}, #{upperLimit,jdbcType=DOUBLE},
      #{lowerContinuedTime,jdbcType=INTEGER}, #{upperContinuedTime,jdbcType=INTEGER},
      #{standardId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSetting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gas_warn_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gasWarnSettingId != null">
        gas_warn_setting_id,
      </if>
      <if test="gasType != null">
        gas_type,
      </if>
      <if test="warnLevelId != null">
        warn_level_id,
      </if>
      <if test="multiple != null">
        multiple,
      </if>
      <if test="lowerLimit != null">
        lower_limit,
      </if>
      <if test="upperLimit != null">
        upper_limit,
      </if>
      <if test="lowerContinuedTime != null">
        lower_continued_time,
      </if>
      <if test="upperContinuedTime != null">
        upper_continued_time,
      </if>
      <if test="standardId != null">
        standard_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gasWarnSettingId != null">
        #{gasWarnSettingId,jdbcType=INTEGER},
      </if>
      <if test="gasType != null">
        #{gasType,jdbcType=INTEGER},
      </if>
      <if test="warnLevelId != null">
        #{warnLevelId,jdbcType=INTEGER},
      </if>
      <if test="multiple != null">
        #{multiple,jdbcType=DOUBLE},
      </if>
      <if test="lowerLimit != null">
        #{lowerLimit,jdbcType=DOUBLE},
      </if>
      <if test="upperLimit != null">
        #{upperLimit,jdbcType=DOUBLE},
      </if>
      <if test="lowerContinuedTime != null">
        #{lowerContinuedTime,jdbcType=INTEGER},
      </if>
      <if test="upperContinuedTime != null">
        #{upperContinuedTime,jdbcType=INTEGER},
      </if>
      <if test="standardId != null">
        #{standardId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSettingExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from gas_warn_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_warn_setting
    <set>
      <if test="record.gasWarnSettingId != null">
        gas_warn_setting_id = #{record.gasWarnSettingId,jdbcType=INTEGER},
      </if>
      <if test="record.gasType != null">
        gas_type = #{record.gasType,jdbcType=INTEGER},
      </if>
      <if test="record.warnLevelId != null">
        warn_level_id = #{record.warnLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.multiple != null">
        multiple = #{record.multiple,jdbcType=DOUBLE},
      </if>
      <if test="record.lowerLimit != null">
        lower_limit = #{record.lowerLimit,jdbcType=DOUBLE},
      </if>
      <if test="record.upperLimit != null">
        upper_limit = #{record.upperLimit,jdbcType=DOUBLE},
      </if>
      <if test="record.lowerContinuedTime != null">
        lower_continued_time = #{record.lowerContinuedTime,jdbcType=INTEGER},
      </if>
      <if test="record.upperContinuedTime != null">
        upper_continued_time = #{record.upperContinuedTime,jdbcType=INTEGER},
      </if>
      <if test="record.standardId != null">
        standard_id = #{record.standardId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_warn_setting
    set gas_warn_setting_id = #{record.gasWarnSettingId,jdbcType=INTEGER},
      gas_type = #{record.gasType,jdbcType=INTEGER},
      warn_level_id = #{record.warnLevelId,jdbcType=INTEGER},
      multiple = #{record.multiple,jdbcType=DOUBLE},
      lower_limit = #{record.lowerLimit,jdbcType=DOUBLE},
      upper_limit = #{record.upperLimit,jdbcType=DOUBLE},
      lower_continued_time = #{record.lowerContinuedTime,jdbcType=INTEGER},
      upper_continued_time = #{record.upperContinuedTime,jdbcType=INTEGER},
      standard_id = #{record.standardId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSetting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_warn_setting
    <set>
      <if test="gasType != null">
        gas_type = #{gasType,jdbcType=INTEGER},
      </if>
      <if test="warnLevelId != null">
        warn_level_id = #{warnLevelId,jdbcType=INTEGER},
      </if>
      <if test="multiple != null">
        multiple = #{multiple,jdbcType=DOUBLE},
      </if>
      <if test="lowerLimit != null">
        lower_limit = #{lowerLimit,jdbcType=DOUBLE},
      </if>
      <if test="upperLimit != null">
        upper_limit = #{upperLimit,jdbcType=DOUBLE},
      </if>
      <if test="lowerContinuedTime != null">
        lower_continued_time = #{lowerContinuedTime,jdbcType=INTEGER},
      </if>
      <if test="upperContinuedTime != null">
        upper_continued_time = #{upperContinuedTime,jdbcType=INTEGER},
      </if>
      <if test="standardId != null">
        standard_id = #{standardId,jdbcType=INTEGER},
      </if>
    </set>
    where gas_warn_setting_id = #{gasWarnSettingId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.warn_level.GasWarnSetting">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_warn_setting
    set gas_type = #{gasType,jdbcType=INTEGER},
      warn_level_id = #{warnLevelId,jdbcType=INTEGER},
      multiple = #{multiple,jdbcType=DOUBLE},
      lower_limit = #{lowerLimit,jdbcType=DOUBLE},
      upper_limit = #{upperLimit,jdbcType=DOUBLE},
      lower_continued_time = #{lowerContinuedTime,jdbcType=INTEGER},
      upper_continued_time = #{upperContinuedTime,jdbcType=INTEGER},
      standard_id = #{standardId,jdbcType=INTEGER}
    where gas_warn_setting_id = #{gasWarnSettingId,jdbcType=INTEGER}
  </update>

  <resultMap id="gasWarnSettingDtoMap" type="com.cst.xinhe.persistence.dto.warn_level_setting.GasWarnSettingDto">
    <id column="gas_warn_setting_id" jdbcType="INTEGER" property="gasWarnSettingId" />
    <result column="gas_type" jdbcType="INTEGER" property="gasType" />
    <result column="warn_level_id" jdbcType="INTEGER" property="warnLevelId" />
    <result column="multiple" jdbcType="DOUBLE" property="multiple" />
    <result column="lower_limit" jdbcType="DOUBLE" property="lowerLimit" />
    <result column="upper_limit" jdbcType="DOUBLE" property="upperLimit" />
    <result column="lower_continued_time" jdbcType="INTEGER" property="lowerContinuedTime" />
    <result column="upper_continued_time" jdbcType="INTEGER" property="upperContinuedTime" />
    <result column="standard_id" jdbcType="INTEGER" property="standardId" />
    <result column="levelDataId" jdbcType="INTEGER" property="levelDataId" />
    <result column="levelName" jdbcType="VARCHAR" property="levelName" />
  </resultMap>
  <select id="selectGasWarnSettingByParams" parameterType="java.util.Map" resultMap="gasWarnSettingDtoMap">
    SELECT <include refid="Base_Column_List" />,id AS levelDataId, level_name AS levelName
    FROM gas_warn_setting INNER JOIN level_data ON gas_warn_setting.warn_level_id = level_data.id
    <where>
      <if test="gasType != null and gasType neq ''">
        AND gas_type = #{gasType,jdbcType=INTEGER}
      </if>
      <if test="warnLevelId != null and warnLevelId neq ''">
        AND warn_level_id = #{warnLevelId,jdbcType=INTEGER}
      </if>
      <if test="multiple != null and multiple neq ''">
        AND multiple = #{multiple,jdbcType=DOUBLE}
      </if>
      <if test="lowerLimit != null and lowerLimit neq ''">
        AND lower_limit = #{lowerLimit,jdbcType=DOUBLE}
      </if>
      <if test="upperLimit != null and upperLimit neq ''">
        AND  upper_limit = #{upperLimit,jdbcType=DOUBLE}
      </if>
      <if test="lowerContinuedTime != null and lowerContinuedTime neq ''">
        AND  lower_coutinued_time = #{lowerContinuedTime,jdbcType=INTEGER}
      </if>
      <if test="upperContinuedTime != null and upperContinuedTime neq ''">
        AND upper_continued_time = #{upperContinuedTime,jdbcType=INTEGER}
      </if>
      <if test="standardId != null and standardId neq ''">
        AND standard_id = #{standardId,jdbcType=INTEGER}
      </if>
    </where>
    ORDER BY multiple asc
  </select>
</mapper>
