<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.coordinate.CoordinateMapper">
  <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.coordinate.Coordinate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="coordinate_id" jdbcType="INTEGER" property="coordinateId" />
    <result column="coordinate_x" jdbcType="DOUBLE" property="coordinateX" />
    <result column="coordinate_y" jdbcType="DOUBLE" property="coordinateY" />
    <result column="coordinate_z" jdbcType="DOUBLE" property="coordinateZ" />
    <result column="warning_area_id" jdbcType="INTEGER" property="warningAreaId" />
    <result column="warning_area_name" jdbcType="INTEGER" property="warningAreaName" />
    <result column="warning_area_type" jdbcType="INTEGER" property="warningAreaType" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    coordinate_id, coordinate_x, coordinate_y, coordinate_z, warning_area_id
  </sql>
  <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.coordinate.CoordinateExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coordinate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from coordinate
    where coordinate_id = #{coordinateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from coordinate
    where coordinate_id = #{coordinateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.coordinate.CoordinateExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from coordinate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cst.xinhe.persistence.model.coordinate.Coordinate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into coordinate (coordinate_id, coordinate_x, coordinate_y,
      coordinate_z, warning_area_id)
    values (#{coordinateId,jdbcType=INTEGER}, #{coordinateX,jdbcType=DOUBLE}, #{coordinateY,jdbcType=DOUBLE},
      #{coordinateZ,jdbcType=DOUBLE}, #{warningAreaId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.coordinate.Coordinate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into coordinate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coordinateId != null">
        coordinate_id,
      </if>
      <if test="coordinateX != null">
        coordinate_x,
      </if>
      <if test="coordinateY != null">
        coordinate_y,
      </if>
      <if test="coordinateZ != null">
        coordinate_z,
      </if>
      <if test="warningAreaId != null">
        warning_area_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coordinateId != null">
        #{coordinateId,jdbcType=INTEGER},
      </if>
      <if test="coordinateX != null">
        #{coordinateX,jdbcType=DOUBLE},
      </if>
      <if test="coordinateY != null">
        #{coordinateY,jdbcType=DOUBLE},
      </if>
      <if test="coordinateZ != null">
        #{coordinateZ,jdbcType=DOUBLE},
      </if>
      <if test="warningAreaId != null">
        #{warningAreaId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.coordinate.CoordinateExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from coordinate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coordinate
    <set>
      <if test="record.coordinateId != null">
        coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
      </if>
      <if test="record.coordinateX != null">
        coordinate_x = #{record.coordinateX,jdbcType=DOUBLE},
      </if>
      <if test="record.coordinateY != null">
        coordinate_y = #{record.coordinateY,jdbcType=DOUBLE},
      </if>
      <if test="record.coordinateZ != null">
        coordinate_z = #{record.coordinateZ,jdbcType=DOUBLE},
      </if>
      <if test="record.warningAreaId != null">
        warning_area_id = #{record.warningAreaId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coordinate
    set coordinate_id = #{record.coordinateId,jdbcType=INTEGER},
      coordinate_x = #{record.coordinateX,jdbcType=DOUBLE},
      coordinate_y = #{record.coordinateY,jdbcType=DOUBLE},
      coordinate_z = #{record.coordinateZ,jdbcType=DOUBLE},
      warning_area_id = #{record.warningAreaId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.coordinate.Coordinate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coordinate
    <set>
      <if test="coordinateX != null">
        coordinate_x = #{coordinateX,jdbcType=DOUBLE},
      </if>
      <if test="coordinateY != null">
        coordinate_y = #{coordinateY,jdbcType=DOUBLE},
      </if>
      <if test="coordinateZ != null">
        coordinate_z = #{coordinateZ,jdbcType=DOUBLE},
      </if>
      <if test="warningAreaId != null">
        warning_area_id = #{warningAreaId,jdbcType=INTEGER},
      </if>
    </set>
    where coordinate_id = #{coordinateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.coordinate.Coordinate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coordinate
    set coordinate_x = #{coordinateX,jdbcType=DOUBLE},
      coordinate_y = #{coordinateY,jdbcType=DOUBLE},
      coordinate_z = #{coordinateZ,jdbcType=DOUBLE},
      warning_area_id = #{warningAreaId,jdbcType=INTEGER}
    where coordinate_id = #{coordinateId,jdbcType=INTEGER}
  </update>


  <select id="getAllAreaId" resultType="java.lang.Integer">
    select distinct warning_area_id from coordinate

  </select>

  <resultMap id="customMap" type="com.cst.xinhe.persistence.vo.resp.CoordinateVO">
    <result column="coordinate_x" property="x"/>
    <result column="coordinate_y" property="y"/>
    <result column="coordinate_z" property="z"/>
  </resultMap>
  <select id="selectCoordinateInfoByAreaId" parameterType="java.lang.Integer" resultMap="customMap">
    SELECT coordinate_x,coordinate_y,coordinate_z FROM coordinate
    WHERE warning_area_id = #{areaId}
  </select>

  <select id="selectCountCoordinateByWarningAreaId" parameterType="java.lang.Integer" resultType="java.lang.Boolean">
    SELECT COUNT(1)
    FROM coordinate
    WHERE warning_area_id = #{warningAreaId}
  </select>

</mapper>
