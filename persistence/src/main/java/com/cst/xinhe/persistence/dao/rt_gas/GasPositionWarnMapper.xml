<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.rt_gas.GasPositionWarnMapper">
  <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="gas_position_id" jdbcType="BIGINT" property="gasPositionId" />
    <result column="co" jdbcType="DOUBLE" property="co" />
    <result column="co_unit" jdbcType="INTEGER" property="coUnit" />
    <result column="ch4" jdbcType="DOUBLE" property="ch4" />
    <result column="ch4_unit" jdbcType="INTEGER" property="ch4Unit" />
    <result column="o2" jdbcType="DOUBLE" property="o2" />
    <result column="o2_unit" jdbcType="INTEGER" property="o2Unit" />
    <result column="co2" jdbcType="DOUBLE" property="co2" />
    <result column="co2_unit" jdbcType="INTEGER" property="co2Unit" />
    <result column="temperature" jdbcType="DOUBLE" property="temperature" />
    <result column="temperature_unit" jdbcType="INTEGER" property="temperatureUnit" />
    <result column="humidity" jdbcType="DOUBLE" property="humidity" />
    <result column="humidity_unit" jdbcType="INTEGER" property="humidityUnit" />
    <result column="field_3" jdbcType="DOUBLE" property="field3" />
    <result column="field_3_unit" jdbcType="INTEGER" property="field3Unit" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
    <result column="terminal_id" jdbcType="INTEGER" property="terminalId" />
    <result column="station_id" jdbcType="INTEGER" property="stationId" />
    <result column="terminal_ip" jdbcType="VARCHAR" property="terminalIp" />
    <result column="station_ip" jdbcType="VARCHAR" property="stationIp" />
    <result column="terminal_real_time" jdbcType="TIMESTAMP" property="terminalRealTime" />
    <result column="info_type" jdbcType="INTEGER" property="infoType" />
    <result column="sequence_id" jdbcType="INTEGER" property="sequenceId" />
    <result column="position_x" jdbcType="DOUBLE" property="positionX" />
    <result column="position_y" jdbcType="DOUBLE" property="positionY" />
    <result column="position_z" jdbcType="DOUBLE" property="positionZ" />
    <result column="station_id1" jdbcType="INTEGER" property="stationId1" />
    <result column="station_id2" jdbcType="INTEGER" property="stationId2" />
    <result column="wifi_strength1" jdbcType="DOUBLE" property="wifiStrength1" />
    <result column="wifi_strength2" jdbcType="DOUBLE" property="wifiStrength2" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="temp_position_name" jdbcType="VARCHAR" property="tempPositionName" />
    <result column="is_ore" jdbcType="INTEGER" property="isOre" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    gas_position_id, co, co_unit, ch4, ch4_unit, o2, o2_unit, co2, co2_unit, temperature,
    temperature_unit, humidity, humidity_unit, field_3, field_3_unit, staff_id, terminal_id,
    station_id, terminal_ip, station_ip, terminal_real_time, info_type, sequence_id,
    position_x, position_y, position_z, station_id1, station_id2, wifi_strength1, wifi_strength2,
    create_time, temp_position_name, is_ore
  </sql>
  <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarnExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from gas_position_warn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from gas_position_warn
    where gas_position_id = #{gasPositionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gas_position_warn
    where gas_position_id = #{gasPositionId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarnExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gas_position_warn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gas_position_warn (gas_position_id, co, co_unit,
      ch4, ch4_unit, o2, o2_unit,
      co2, co2_unit, temperature,
      temperature_unit, humidity, humidity_unit,
      field_3, field_3_unit, staff_id,
      terminal_id, station_id, terminal_ip,
      station_ip, terminal_real_time, info_type,
      sequence_id, position_x, position_y,
      position_z, station_id1, station_id2,
      wifi_strength1, wifi_strength2, create_time,
      temp_position_name, is_ore)
    values (#{gasPositionId,jdbcType=BIGINT}, #{co,jdbcType=DOUBLE}, #{coUnit,jdbcType=INTEGER},
      #{ch4,jdbcType=DOUBLE}, #{ch4Unit,jdbcType=INTEGER}, #{o2,jdbcType=DOUBLE}, #{o2Unit,jdbcType=INTEGER},
      #{co2,jdbcType=DOUBLE}, #{co2Unit,jdbcType=INTEGER}, #{temperature,jdbcType=DOUBLE},
      #{temperatureUnit,jdbcType=INTEGER}, #{humidity,jdbcType=DOUBLE}, #{humidityUnit,jdbcType=INTEGER},
      #{field3,jdbcType=DOUBLE}, #{field3Unit,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER},
      #{terminalId,jdbcType=INTEGER}, #{stationId,jdbcType=INTEGER}, #{terminalIp,jdbcType=VARCHAR},
      #{stationIp,jdbcType=VARCHAR}, #{terminalRealTime,jdbcType=TIMESTAMP}, #{infoType,jdbcType=INTEGER},
      #{sequenceId,jdbcType=INTEGER}, #{positionX,jdbcType=DOUBLE}, #{positionY,jdbcType=DOUBLE},
      #{positionZ,jdbcType=DOUBLE}, #{stationId1,jdbcType=INTEGER}, #{stationId2,jdbcType=INTEGER},
      #{wifiStrength1,jdbcType=DOUBLE}, #{wifiStrength2,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP},
      #{tempPositionName,jdbcType=VARCHAR}, #{isOre,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gas_position_warn
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gasPositionId != null">
        gas_position_id,
      </if>
      <if test="co != null">
        co,
      </if>
      <if test="coUnit != null">
        co_unit,
      </if>
      <if test="ch4 != null">
        ch4,
      </if>
      <if test="ch4Unit != null">
        ch4_unit,
      </if>
      <if test="o2 != null">
        o2,
      </if>
      <if test="o2Unit != null">
        o2_unit,
      </if>
      <if test="co2 != null">
        co2,
      </if>
      <if test="co2Unit != null">
        co2_unit,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="temperatureUnit != null">
        temperature_unit,
      </if>
      <if test="humidity != null">
        humidity,
      </if>
      <if test="humidityUnit != null">
        humidity_unit,
      </if>
      <if test="field3 != null">
        field_3,
      </if>
      <if test="field3Unit != null">
        field_3_unit,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
      <if test="terminalId != null">
        terminal_id,
      </if>
      <if test="stationId != null">
        station_id,
      </if>
      <if test="terminalIp != null">
        terminal_ip,
      </if>
      <if test="stationIp != null">
        station_ip,
      </if>
      <if test="terminalRealTime != null">
        terminal_real_time,
      </if>
      <if test="infoType != null">
        info_type,
      </if>
      <if test="sequenceId != null">
        sequence_id,
      </if>
      <if test="positionX != null">
        position_x,
      </if>
      <if test="positionY != null">
        position_y,
      </if>
      <if test="positionZ != null">
        position_z,
      </if>
      <if test="stationId1 != null">
        station_id1,
      </if>
      <if test="stationId2 != null">
        station_id2,
      </if>
      <if test="wifiStrength1 != null">
        wifi_strength1,
      </if>
      <if test="wifiStrength2 != null">
        wifi_strength2,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="tempPositionName != null">
        temp_position_name,
      </if>
      <if test="isOre != null">
        is_ore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gasPositionId != null">
        #{gasPositionId,jdbcType=BIGINT},
      </if>
      <if test="co != null">
        #{co,jdbcType=DOUBLE},
      </if>
      <if test="coUnit != null">
        #{coUnit,jdbcType=INTEGER},
      </if>
      <if test="ch4 != null">
        #{ch4,jdbcType=DOUBLE},
      </if>
      <if test="ch4Unit != null">
        #{ch4Unit,jdbcType=INTEGER},
      </if>
      <if test="o2 != null">
        #{o2,jdbcType=DOUBLE},
      </if>
      <if test="o2Unit != null">
        #{o2Unit,jdbcType=INTEGER},
      </if>
      <if test="co2 != null">
        #{co2,jdbcType=DOUBLE},
      </if>
      <if test="co2Unit != null">
        #{co2Unit,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=DOUBLE},
      </if>
      <if test="temperatureUnit != null">
        #{temperatureUnit,jdbcType=INTEGER},
      </if>
      <if test="humidity != null">
        #{humidity,jdbcType=DOUBLE},
      </if>
      <if test="humidityUnit != null">
        #{humidityUnit,jdbcType=INTEGER},
      </if>
      <if test="field3 != null">
        #{field3,jdbcType=DOUBLE},
      </if>
      <if test="field3Unit != null">
        #{field3Unit,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
      <if test="terminalId != null">
        #{terminalId,jdbcType=INTEGER},
      </if>
      <if test="stationId != null">
        #{stationId,jdbcType=INTEGER},
      </if>
      <if test="terminalIp != null">
        #{terminalIp,jdbcType=VARCHAR},
      </if>
      <if test="stationIp != null">
        #{stationIp,jdbcType=VARCHAR},
      </if>
      <if test="terminalRealTime != null">
        #{terminalRealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="infoType != null">
        #{infoType,jdbcType=INTEGER},
      </if>
      <if test="sequenceId != null">
        #{sequenceId,jdbcType=INTEGER},
      </if>
      <if test="positionX != null">
        #{positionX,jdbcType=DOUBLE},
      </if>
      <if test="positionY != null">
        #{positionY,jdbcType=DOUBLE},
      </if>
      <if test="positionZ != null">
        #{positionZ,jdbcType=DOUBLE},
      </if>
      <if test="stationId1 != null">
        #{stationId1,jdbcType=INTEGER},
      </if>
      <if test="stationId2 != null">
        #{stationId2,jdbcType=INTEGER},
      </if>
      <if test="wifiStrength1 != null">
        #{wifiStrength1,jdbcType=DOUBLE},
      </if>
      <if test="wifiStrength2 != null">
        #{wifiStrength2,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tempPositionName != null">
        #{tempPositionName,jdbcType=VARCHAR},
      </if>
      <if test="isOre != null">
        #{isOre,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarnExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from gas_position_warn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_position_warn
    <set>
      <if test="record.gasPositionId != null">
        gas_position_id = #{record.gasPositionId,jdbcType=BIGINT},
      </if>
      <if test="record.co != null">
        co = #{record.co,jdbcType=DOUBLE},
      </if>
      <if test="record.coUnit != null">
        co_unit = #{record.coUnit,jdbcType=INTEGER},
      </if>
      <if test="record.ch4 != null">
        ch4 = #{record.ch4,jdbcType=DOUBLE},
      </if>
      <if test="record.ch4Unit != null">
        ch4_unit = #{record.ch4Unit,jdbcType=INTEGER},
      </if>
      <if test="record.o2 != null">
        o2 = #{record.o2,jdbcType=DOUBLE},
      </if>
      <if test="record.o2Unit != null">
        o2_unit = #{record.o2Unit,jdbcType=INTEGER},
      </if>
      <if test="record.co2 != null">
        co2 = #{record.co2,jdbcType=DOUBLE},
      </if>
      <if test="record.co2Unit != null">
        co2_unit = #{record.co2Unit,jdbcType=INTEGER},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=DOUBLE},
      </if>
      <if test="record.temperatureUnit != null">
        temperature_unit = #{record.temperatureUnit,jdbcType=INTEGER},
      </if>
      <if test="record.humidity != null">
        humidity = #{record.humidity,jdbcType=DOUBLE},
      </if>
      <if test="record.humidityUnit != null">
        humidity_unit = #{record.humidityUnit,jdbcType=INTEGER},
      </if>
      <if test="record.field3 != null">
        field_3 = #{record.field3,jdbcType=DOUBLE},
      </if>
      <if test="record.field3Unit != null">
        field_3_unit = #{record.field3Unit,jdbcType=INTEGER},
      </if>
      <if test="record.staffId != null">
        staff_id = #{record.staffId,jdbcType=INTEGER},
      </if>
      <if test="record.terminalId != null">
        terminal_id = #{record.terminalId,jdbcType=INTEGER},
      </if>
      <if test="record.stationId != null">
        station_id = #{record.stationId,jdbcType=INTEGER},
      </if>
      <if test="record.terminalIp != null">
        terminal_ip = #{record.terminalIp,jdbcType=VARCHAR},
      </if>
      <if test="record.stationIp != null">
        station_ip = #{record.stationIp,jdbcType=VARCHAR},
      </if>
      <if test="record.terminalRealTime != null">
        terminal_real_time = #{record.terminalRealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.infoType != null">
        info_type = #{record.infoType,jdbcType=INTEGER},
      </if>
      <if test="record.sequenceId != null">
        sequence_id = #{record.sequenceId,jdbcType=INTEGER},
      </if>
      <if test="record.positionX != null">
        position_x = #{record.positionX,jdbcType=DOUBLE},
      </if>
      <if test="record.positionY != null">
        position_y = #{record.positionY,jdbcType=DOUBLE},
      </if>
      <if test="record.positionZ != null">
        position_z = #{record.positionZ,jdbcType=DOUBLE},
      </if>
      <if test="record.stationId1 != null">
        station_id1 = #{record.stationId1,jdbcType=INTEGER},
      </if>
      <if test="record.stationId2 != null">
        station_id2 = #{record.stationId2,jdbcType=INTEGER},
      </if>
      <if test="record.wifiStrength1 != null">
        wifi_strength1 = #{record.wifiStrength1,jdbcType=DOUBLE},
      </if>
      <if test="record.wifiStrength2 != null">
        wifi_strength2 = #{record.wifiStrength2,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tempPositionName != null">
        temp_position_name = #{record.tempPositionName,jdbcType=VARCHAR},
      </if>
      <if test="record.isOre != null">
        is_ore = #{record.isOre,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_position_warn
    set gas_position_id = #{record.gasPositionId,jdbcType=BIGINT},
      co = #{record.co,jdbcType=DOUBLE},
      co_unit = #{record.coUnit,jdbcType=INTEGER},
      ch4 = #{record.ch4,jdbcType=DOUBLE},
      ch4_unit = #{record.ch4Unit,jdbcType=INTEGER},
      o2 = #{record.o2,jdbcType=DOUBLE},
      o2_unit = #{record.o2Unit,jdbcType=INTEGER},
      co2 = #{record.co2,jdbcType=DOUBLE},
      co2_unit = #{record.co2Unit,jdbcType=INTEGER},
      temperature = #{record.temperature,jdbcType=DOUBLE},
      temperature_unit = #{record.temperatureUnit,jdbcType=INTEGER},
      humidity = #{record.humidity,jdbcType=DOUBLE},
      humidity_unit = #{record.humidityUnit,jdbcType=INTEGER},
      field_3 = #{record.field3,jdbcType=DOUBLE},
      field_3_unit = #{record.field3Unit,jdbcType=INTEGER},
      staff_id = #{record.staffId,jdbcType=INTEGER},
      terminal_id = #{record.terminalId,jdbcType=INTEGER},
      station_id = #{record.stationId,jdbcType=INTEGER},
      terminal_ip = #{record.terminalIp,jdbcType=VARCHAR},
      station_ip = #{record.stationIp,jdbcType=VARCHAR},
      terminal_real_time = #{record.terminalRealTime,jdbcType=TIMESTAMP},
      info_type = #{record.infoType,jdbcType=INTEGER},
      sequence_id = #{record.sequenceId,jdbcType=INTEGER},
      position_x = #{record.positionX,jdbcType=DOUBLE},
      position_y = #{record.positionY,jdbcType=DOUBLE},
      position_z = #{record.positionZ,jdbcType=DOUBLE},
      station_id1 = #{record.stationId1,jdbcType=INTEGER},
      station_id2 = #{record.stationId2,jdbcType=INTEGER},
      wifi_strength1 = #{record.wifiStrength1,jdbcType=DOUBLE},
      wifi_strength2 = #{record.wifiStrength2,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_position_name = #{record.tempPositionName,jdbcType=VARCHAR},
      is_ore = #{record.isOre,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_position_warn
    <set>
      <if test="co != null">
        co = #{co,jdbcType=DOUBLE},
      </if>
      <if test="coUnit != null">
        co_unit = #{coUnit,jdbcType=INTEGER},
      </if>
      <if test="ch4 != null">
        ch4 = #{ch4,jdbcType=DOUBLE},
      </if>
      <if test="ch4Unit != null">
        ch4_unit = #{ch4Unit,jdbcType=INTEGER},
      </if>
      <if test="o2 != null">
        o2 = #{o2,jdbcType=DOUBLE},
      </if>
      <if test="o2Unit != null">
        o2_unit = #{o2Unit,jdbcType=INTEGER},
      </if>
      <if test="co2 != null">
        co2 = #{co2,jdbcType=DOUBLE},
      </if>
      <if test="co2Unit != null">
        co2_unit = #{co2Unit,jdbcType=INTEGER},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=DOUBLE},
      </if>
      <if test="temperatureUnit != null">
        temperature_unit = #{temperatureUnit,jdbcType=INTEGER},
      </if>
      <if test="humidity != null">
        humidity = #{humidity,jdbcType=DOUBLE},
      </if>
      <if test="humidityUnit != null">
        humidity_unit = #{humidityUnit,jdbcType=INTEGER},
      </if>
      <if test="field3 != null">
        field_3 = #{field3,jdbcType=DOUBLE},
      </if>
      <if test="field3Unit != null">
        field_3_unit = #{field3Unit,jdbcType=INTEGER},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
      <if test="terminalId != null">
        terminal_id = #{terminalId,jdbcType=INTEGER},
      </if>
      <if test="stationId != null">
        station_id = #{stationId,jdbcType=INTEGER},
      </if>
      <if test="terminalIp != null">
        terminal_ip = #{terminalIp,jdbcType=VARCHAR},
      </if>
      <if test="stationIp != null">
        station_ip = #{stationIp,jdbcType=VARCHAR},
      </if>
      <if test="terminalRealTime != null">
        terminal_real_time = #{terminalRealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="infoType != null">
        info_type = #{infoType,jdbcType=INTEGER},
      </if>
      <if test="sequenceId != null">
        sequence_id = #{sequenceId,jdbcType=INTEGER},
      </if>
      <if test="positionX != null">
        position_x = #{positionX,jdbcType=DOUBLE},
      </if>
      <if test="positionY != null">
        position_y = #{positionY,jdbcType=DOUBLE},
      </if>
      <if test="positionZ != null">
        position_z = #{positionZ,jdbcType=DOUBLE},
      </if>
      <if test="stationId1 != null">
        station_id1 = #{stationId1,jdbcType=INTEGER},
      </if>
      <if test="stationId2 != null">
        station_id2 = #{stationId2,jdbcType=INTEGER},
      </if>
      <if test="wifiStrength1 != null">
        wifi_strength1 = #{wifiStrength1,jdbcType=DOUBLE},
      </if>
      <if test="wifiStrength2 != null">
        wifi_strength2 = #{wifiStrength2,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tempPositionName != null">
        temp_position_name = #{tempPositionName,jdbcType=VARCHAR},
      </if>
      <if test="isOre != null">
        is_ore = #{isOre,jdbcType=INTEGER},
      </if>
    </set>
    where gas_position_id = #{gasPositionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.rt_gas.GasPositionWarn">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gas_position_warn
    set co = #{co,jdbcType=DOUBLE},
      co_unit = #{coUnit,jdbcType=INTEGER},
      ch4 = #{ch4,jdbcType=DOUBLE},
      ch4_unit = #{ch4Unit,jdbcType=INTEGER},
      o2 = #{o2,jdbcType=DOUBLE},
      o2_unit = #{o2Unit,jdbcType=INTEGER},
      co2 = #{co2,jdbcType=DOUBLE},
      co2_unit = #{co2Unit,jdbcType=INTEGER},
      temperature = #{temperature,jdbcType=DOUBLE},
      temperature_unit = #{temperatureUnit,jdbcType=INTEGER},
      humidity = #{humidity,jdbcType=DOUBLE},
      humidity_unit = #{humidityUnit,jdbcType=INTEGER},
      field_3 = #{field3,jdbcType=DOUBLE},
      field_3_unit = #{field3Unit,jdbcType=INTEGER},
      staff_id = #{staffId,jdbcType=INTEGER},
      terminal_id = #{terminalId,jdbcType=INTEGER},
      station_id = #{stationId,jdbcType=INTEGER},
      terminal_ip = #{terminalIp,jdbcType=VARCHAR},
      station_ip = #{stationIp,jdbcType=VARCHAR},
      terminal_real_time = #{terminalRealTime,jdbcType=TIMESTAMP},
      info_type = #{infoType,jdbcType=INTEGER},
      sequence_id = #{sequenceId,jdbcType=INTEGER},
      position_x = #{positionX,jdbcType=DOUBLE},
      position_y = #{positionY,jdbcType=DOUBLE},
      position_z = #{positionZ,jdbcType=DOUBLE},
      station_id1 = #{stationId1,jdbcType=INTEGER},
      station_id2 = #{stationId2,jdbcType=INTEGER},
      wifi_strength1 = #{wifiStrength1,jdbcType=DOUBLE},
      wifi_strength2 = #{wifiStrength2,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      temp_position_name = #{tempPositionName,jdbcType=VARCHAR},
      is_ore = #{isOre,jdbcType=INTEGER}
    where gas_position_id = #{gasPositionId,jdbcType=BIGINT}
  </update>
</mapper>
