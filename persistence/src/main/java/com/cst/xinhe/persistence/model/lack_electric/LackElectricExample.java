package com.cst.xinhe.persistence.model.lack_electric;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LackElectricExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public LackElectricExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLackElectricIdIsNull() {
            addCriterion("lack_electric_id is null");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdIsNotNull() {
            addCriterion("lack_electric_id is not null");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdEqualTo(Integer value) {
            addCriterion("lack_electric_id =", value, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdNotEqualTo(Integer value) {
            addCriterion("lack_electric_id <>", value, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdGreaterThan(Integer value) {
            addCriterion("lack_electric_id >", value, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("lack_electric_id >=", value, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdLessThan(Integer value) {
            addCriterion("lack_electric_id <", value, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdLessThanOrEqualTo(Integer value) {
            addCriterion("lack_electric_id <=", value, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdIn(List<Integer> values) {
            addCriterion("lack_electric_id in", values, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdNotIn(List<Integer> values) {
            addCriterion("lack_electric_id not in", values, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdBetween(Integer value1, Integer value2) {
            addCriterion("lack_electric_id between", value1, value2, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andLackElectricIdNotBetween(Integer value1, Integer value2) {
            addCriterion("lack_electric_id not between", value1, value2, "lackElectricId");
            return (Criteria) this;
        }

        public Criteria andUploadIdIsNull() {
            addCriterion("upload_id is null");
            return (Criteria) this;
        }

        public Criteria andUploadIdIsNotNull() {
            addCriterion("upload_id is not null");
            return (Criteria) this;
        }

        public Criteria andUploadIdEqualTo(Integer value) {
            addCriterion("upload_id =", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotEqualTo(Integer value) {
            addCriterion("upload_id <>", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdGreaterThan(Integer value) {
            addCriterion("upload_id >", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("upload_id >=", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdLessThan(Integer value) {
            addCriterion("upload_id <", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdLessThanOrEqualTo(Integer value) {
            addCriterion("upload_id <=", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdIn(List<Integer> values) {
            addCriterion("upload_id in", values, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotIn(List<Integer> values) {
            addCriterion("upload_id not in", values, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdBetween(Integer value1, Integer value2) {
            addCriterion("upload_id between", value1, value2, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotBetween(Integer value1, Integer value2) {
            addCriterion("upload_id not between", value1, value2, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIsNull() {
            addCriterion("upload_time is null");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIsNotNull() {
            addCriterion("upload_time is not null");
            return (Criteria) this;
        }

        public Criteria andUploadTimeEqualTo(Date value) {
            addCriterion("upload_time =", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotEqualTo(Date value) {
            addCriterion("upload_time <>", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeGreaterThan(Date value) {
            addCriterion("upload_time >", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("upload_time >=", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeLessThan(Date value) {
            addCriterion("upload_time <", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeLessThanOrEqualTo(Date value) {
            addCriterion("upload_time <=", value, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeIn(List<Date> values) {
            addCriterion("upload_time in", values, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotIn(List<Date> values) {
            addCriterion("upload_time not in", values, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeBetween(Date value1, Date value2) {
            addCriterion("upload_time between", value1, value2, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andUploadTimeNotBetween(Date value1, Date value2) {
            addCriterion("upload_time not between", value1, value2, "uploadTime");
            return (Criteria) this;
        }

        public Criteria andElectricValueIsNull() {
            addCriterion("electric_value is null");
            return (Criteria) this;
        }

        public Criteria andElectricValueIsNotNull() {
            addCriterion("electric_value is not null");
            return (Criteria) this;
        }

        public Criteria andElectricValueEqualTo(Integer value) {
            addCriterion("electric_value =", value, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueNotEqualTo(Integer value) {
            addCriterion("electric_value <>", value, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueGreaterThan(Integer value) {
            addCriterion("electric_value >", value, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueGreaterThanOrEqualTo(Integer value) {
            addCriterion("electric_value >=", value, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueLessThan(Integer value) {
            addCriterion("electric_value <", value, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueLessThanOrEqualTo(Integer value) {
            addCriterion("electric_value <=", value, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueIn(List<Integer> values) {
            addCriterion("electric_value in", values, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueNotIn(List<Integer> values) {
            addCriterion("electric_value not in", values, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueBetween(Integer value1, Integer value2) {
            addCriterion("electric_value between", value1, value2, "electricValue");
            return (Criteria) this;
        }

        public Criteria andElectricValueNotBetween(Integer value1, Integer value2) {
            addCriterion("electric_value not between", value1, value2, "electricValue");
            return (Criteria) this;
        }

        public Criteria andLackTypeIsNull() {
            addCriterion("lack_type is null");
            return (Criteria) this;
        }

        public Criteria andLackTypeIsNotNull() {
            addCriterion("lack_type is not null");
            return (Criteria) this;
        }

        public Criteria andLackTypeEqualTo(Integer value) {
            addCriterion("lack_type =", value, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeNotEqualTo(Integer value) {
            addCriterion("lack_type <>", value, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeGreaterThan(Integer value) {
            addCriterion("lack_type >", value, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("lack_type >=", value, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeLessThan(Integer value) {
            addCriterion("lack_type <", value, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeLessThanOrEqualTo(Integer value) {
            addCriterion("lack_type <=", value, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeIn(List<Integer> values) {
            addCriterion("lack_type in", values, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeNotIn(List<Integer> values) {
            addCriterion("lack_type not in", values, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeBetween(Integer value1, Integer value2) {
            addCriterion("lack_type between", value1, value2, "lackType");
            return (Criteria) this;
        }

        public Criteria andLackTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("lack_type not between", value1, value2, "lackType");
            return (Criteria) this;
        }

        public Criteria andIsReadIsNull() {
            addCriterion("is_read is null");
            return (Criteria) this;
        }

        public Criteria andIsReadIsNotNull() {
            addCriterion("is_read is not null");
            return (Criteria) this;
        }

        public Criteria andIsReadEqualTo(Integer value) {
            addCriterion("is_read =", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotEqualTo(Integer value) {
            addCriterion("is_read <>", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadGreaterThan(Integer value) {
            addCriterion("is_read >", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_read >=", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadLessThan(Integer value) {
            addCriterion("is_read <", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadLessThanOrEqualTo(Integer value) {
            addCriterion("is_read <=", value, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadIn(List<Integer> values) {
            addCriterion("is_read in", values, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotIn(List<Integer> values) {
            addCriterion("is_read not in", values, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadBetween(Integer value1, Integer value2) {
            addCriterion("is_read between", value1, value2, "isRead");
            return (Criteria) this;
        }

        public Criteria andIsReadNotBetween(Integer value1, Integer value2) {
            addCriterion("is_read not between", value1, value2, "isRead");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lack_electric
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table lack_electric
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
