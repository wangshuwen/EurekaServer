package com.cst.xinhe.persistence.dao.base_station;

import com.cst.xinhe.persistence.model.base_station.BaseStation;
import com.cst.xinhe.persistence.model.base_station.BaseStationExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;
import java.util.Map;

public interface BaseStationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    long countByExample(BaseStationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int deleteByExample(BaseStationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer baseStationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int insert(BaseStation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int insertSelective(BaseStation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    List<BaseStation> selectByExample(BaseStationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    BaseStation selectByPrimaryKey(Integer baseStationId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") BaseStation record, @Param("example") BaseStationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") BaseStation record, @Param("example") BaseStationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(BaseStation record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table base_station
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(BaseStation record);

    List<BaseStation> selectBaseStationInfoByTime(@Param("begin") String begin, @Param("end") String end);

    List<BaseStation> selectAllBaseStationInfo();

    List<BaseStation> selectBaseStationInfoByStartTime(String begin);

    List<BaseStation> selectBaseStationInfoByEndTime(String end);

    List<Map<String, Object>> selectBaseStationPositionInfo();

    List<Map<String, Object>> selectBaseStationPositionInfoNotUsed();

    boolean selectCountStationByBaseStationNum(Integer baseStationNum);

    List<BaseStation> findAllStationByAreaId(@Param("areaId") Integer areaId);

    BaseStation findBaseStationById(int stationId);

    BaseStation findBaseStationByNum(int stationId);

    int updateBaseStationByStationId(BaseStation station);

    List<BaseStation> selectBaseStationByZoneId(Integer zoneId);

    List<Map<String, Object>> selectBaseStationInfoByParams(Map<String, Object> params);

    Map<String, Object> selectZoneNameAreaNameByStationId(Integer stationId);

    List<BaseStation> findBaseStationByZoneIds(@Param("zoneIds") List<Integer> zoneIds);

    void updateByStationNumSelective(BaseStation baseStation);

    Map<String, Object> selectStandardIdByStationNum(Map<String, Object> params);

    List<Map<String, Object>> selectAllBaseStation();

    Map<String, Object> selectBaseStationByType(Integer type);

    int updateBaseStationTypeByStationNum(Map<String, Object> map);

    Map<String, Object> selectFrequencyByStationId(Integer stationId);

    int modifyFrequency(@Param("stationId") int item, @Param("frequency") double frequency);

    boolean selectCountStationByTypeAndId(@Param("stationNum") Integer stationNum, @Param("type") Integer type);
}
