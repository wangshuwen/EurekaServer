<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cst.xinhe.persistence.dao.chat.ChatMsgMapper">
    <resultMap id="BaseResultMap" type="com.cst.xinhe.persistence.model.chat.ChatMsg">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="msg_id" jdbcType="INTEGER" property="msgId"/>
        <result column="post_msg" jdbcType="VARCHAR" property="postMsg"/>
        <result column="length_msg" jdbcType="INTEGER" property="lengthMsg"/>
        <result column="status" jdbcType="BIT" property="status"/>
        <result column="post_time" jdbcType="TIMESTAMP" property="postTime"/>
        <result column="post_user_id" jdbcType="INTEGER" property="postUserId"/>
        <result column="post_ip" jdbcType="VARCHAR" property="postIp"/>
        <result column="receive_ip" jdbcType="VARCHAR" property="receiveIp"/>
        <result column="receice_user_id" jdbcType="INTEGER" property="receiceUserId"/>
        <result column="turn_send" jdbcType="BIT" property="turnSend"/>
        <result column="station_ip" jdbcType="VARCHAR" property="stationIp"/>
        <result column="convert_time" jdbcType="TIMESTAMP" property="convertTime"/>
        <result column="terminal_id" jdbcType="INTEGER" property="terminalId"/>
        <result column="is_del" jdbcType="INTEGER" property="isDel"/>
        <result column="sequence_id" jdbcType="VARCHAR" property="sequenceId"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        msg_id AS msgId, post_msg AS postMsg, length_msg AS lengthMsg, status, post_time AS postTime,
        post_user_id AS postUserId, post_ip AS postIp, receive_ip AS receiveIp,
        receice_user_id AS receiceUserId, turn_send AS turnSend, station_ip AS stationIp,
        convert_time AS convertTime, terminal_id AS terminalId,is_del AS isDel,sequence_id AS sequenceId
    </sql>
    <select id="selectByExample" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsgExample" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <!--<include refid="Base_Column_List"/>-->
        *
        from chat_msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from chat_msg
        where msg_id = #{msgId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from chat_msg
        where msg_id = #{msgId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsgExample">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from chat_msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsg">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into chat_msg (msg_id, post_msg, length_msg,
        status, post_time, post_user_id,
        post_ip, receive_ip, receice_user_id,
        turn_send, station_ip, convert_time,
        terminal_id,is_del,sequence_id)
        values (#{msgId,jdbcType=INTEGER}, #{postMsg,jdbcType=VARCHAR}, #{lengthMsg,jdbcType=INTEGER},
        #{status,jdbcType=BIT}, #{postTime,jdbcType=TIMESTAMP}, #{postUserId,jdbcType=INTEGER},
        #{postIp,jdbcType=VARCHAR}, #{receiveIp,jdbcType=VARCHAR}, #{receiceUserId,jdbcType=INTEGER},
        #{turnSend,jdbcType=BIT}, #{stationIp,jdbcType=VARCHAR}, #{convertTime,jdbcType=TIMESTAMP},
        #{terminalId,jdbcType=INTEGER},#{isDel,jdbcType=INTEGER},#{sequenceId,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsg" useGeneratedKeys="true"
            keyProperty="msgId" keyColumn="msg_id">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into chat_msg
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="msgId != null">
                msg_id,
            </if>
            <if test="postMsg != null">
                post_msg,
            </if>
            <if test="lengthMsg != null">
                length_msg,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="postTime != null">
                post_time,
            </if>
            <if test="postUserId != null">
                post_user_id,
            </if>
            <if test="postIp != null">
                post_ip,
            </if>
            <if test="receiveIp != null">
                receive_ip,
            </if>
            <if test="receiceUserId != null">
                receice_user_id,
            </if>
            <if test="turnSend != null">
                turn_send,
            </if>
            <if test="stationIp != null">
                station_ip,
            </if>
            <if test="convertTime != null">
                convert_time,
            </if>
            <if test="terminalId != null">
                terminal_id,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
            <if test="sequenceId != null">
                sequence_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="msgId != null">
                #{msgId,jdbcType=INTEGER},
            </if>
            <if test="postMsg != null">
                #{postMsg,jdbcType=VARCHAR},
            </if>
            <if test="lengthMsg != null">
                #{lengthMsg,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=BIT},
            </if>
            <if test="postTime != null">
                #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="postUserId != null">
                #{postUserId,jdbcType=INTEGER},
            </if>
            <if test="postIp != null">
                #{postIp,jdbcType=VARCHAR},
            </if>
            <if test="receiveIp != null">
                #{receiveIp,jdbcType=VARCHAR},
            </if>
            <if test="receiceUserId != null">
                #{receiceUserId,jdbcType=INTEGER},
            </if>
            <if test="turnSend != null">
                #{turnSend,jdbcType=BIT},
            </if>
            <if test="stationIp != null">
                #{stationIp,jdbcType=VARCHAR},
            </if>
            <if test="convertTime != null">
                #{convertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="terminalId != null">
                #{terminalId,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=INTEGER},
            </if>
            <if test="sequenceId != null">
                #{sequenceId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsgExample" resultType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from chat_msg
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update chat_msg
        <set>
            <if test="record.msgId != null">
                msg_id = #{record.msgId,jdbcType=INTEGER},
            </if>
            <if test="record.postMsg != null">
                post_msg = #{record.postMsg,jdbcType=VARCHAR},
            </if>
            <if test="record.lengthMsg != null">
                length_msg = #{record.lengthMsg,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=BIT},
            </if>
            <if test="record.postTime != null">
                post_time = #{record.postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.postUserId != null">
                post_user_id = #{record.postUserId,jdbcType=INTEGER},
            </if>
            <if test="record.postIp != null">
                post_ip = #{record.postIp,jdbcType=VARCHAR},
            </if>
            <if test="record.receiveIp != null">
                receive_ip = #{record.receiveIp,jdbcType=VARCHAR},
            </if>
            <if test="record.receiceUserId != null">
                receice_user_id = #{record.receiceUserId,jdbcType=INTEGER},
            </if>
            <if test="record.turnSend != null">
                turn_send = #{record.turnSend,jdbcType=BIT},
            </if>
            <if test="record.stationIp != null">
                station_ip = #{record.stationIp,jdbcType=VARCHAR},
            </if>
            <if test="record.convertTime != null">
                convert_time = #{record.convertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.terminalId != null">
                terminal_id = #{record.terminalId,jdbcType=INTEGER},
            </if>
            <if test="record.isDel != null">
                is_del = #{record.isDel,jdbcType=INTEGER},
            </if>
            <if test="record.sequenceId != null">
                sequence_id = #{record.sequenceId,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update chat_msg
        set msg_id = #{record.msgId,jdbcType=INTEGER},
        post_msg = #{record.postMsg,jdbcType=VARCHAR},
        length_msg = #{record.lengthMsg,jdbcType=INTEGER},
        status = #{record.status,jdbcType=BIT},
        post_time = #{record.postTime,jdbcType=TIMESTAMP},
        post_user_id = #{record.postUserId,jdbcType=INTEGER},
        post_ip = #{record.postIp,jdbcType=VARCHAR},
        receive_ip = #{record.receiveIp,jdbcType=VARCHAR},
        receice_user_id = #{record.receiceUserId,jdbcType=INTEGER},
        turn_send = #{record.turnSend,jdbcType=BIT},
        station_ip = #{record.stationIp,jdbcType=VARCHAR},
        convert_time = #{record.convertTime,jdbcType=TIMESTAMP},
        terminal_id = #{record.terminalId,jdbcType=INTEGER},
        is_del = #{record.isDel,jdbcType=INTEGER},
        sequence_id = #{record.sequenceId,jdbcType=VARCHAR}

        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsg">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update chat_msg
        <set>
            <if test="postMsg != null">
                post_msg = #{postMsg,jdbcType=VARCHAR},
            </if>
            <if test="lengthMsg != null">
                length_msg = #{lengthMsg,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=BIT},
            </if>
            <if test="postTime != null">
                post_time = #{postTime,jdbcType=TIMESTAMP},
            </if>
            <if test="postUserId != null">
                post_user_id = #{postUserId,jdbcType=INTEGER},
            </if>
            <if test="postIp != null">
                post_ip = #{postIp,jdbcType=VARCHAR},
            </if>
            <if test="receiveIp != null">
                receive_ip = #{receiveIp,jdbcType=VARCHAR},
            </if>
            <if test="receiceUserId != null">
                receice_user_id = #{receiceUserId,jdbcType=INTEGER},
            </if>
            <if test="turnSend != null">
                turn_send = #{turnSend,jdbcType=BIT},
            </if>
            <if test="stationIp != null">
                station_ip = #{stationIp,jdbcType=VARCHAR},
            </if>
            <if test="convertTime != null">
                convert_time = #{convertTime,jdbcType=TIMESTAMP},
            </if>
            <if test="terminalId != null">
                terminal_id = #{terminalId,jdbcType=INTEGER},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=INTEGER},
            </if>
            <if test="sequenceId != null">
                sequence_id = #{sequenceId,jdbcType=VARCHAR},
            </if>
        </set>
        where msg_id = #{msgId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsg">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update chat_msg
        set post_msg = #{postMsg,jdbcType=VARCHAR},
        length_msg = #{lengthMsg,jdbcType=INTEGER},
        status = #{status,jdbcType=BIT},
        post_time = #{postTime,jdbcType=TIMESTAMP},
        post_user_id = #{postUserId,jdbcType=INTEGER},
        post_ip = #{postIp,jdbcType=VARCHAR},
        receive_ip = #{receiveIp,jdbcType=VARCHAR},
        receice_user_id = #{receiceUserId,jdbcType=INTEGER},
        turn_send = #{turnSend,jdbcType=BIT},
        station_ip = #{stationIp,jdbcType=VARCHAR},
        convert_time = #{convertTime,jdbcType=TIMESTAMP},
        terminal_id = #{terminalId,jdbcType=INTEGER},
        is_del = #{isDel,jdbcType=INTEGER},
        sequence_id = #{sequenceId,jdbcType=VARCHAR}

        where msg_id = #{msgId,jdbcType=INTEGER}
    </update>

    <select id="selectMsgByUserIdAndStaffId" parameterType="java.lang.Integer" resultType="java.util.Map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM chat_msg
        WHERE ( post_user_id = #{staffId} AND receice_user_id = #{userId} )
        OR
        ( post_user_id = #{userId} AND receice_user_id = #{staffId} )  AND  is_del=0
        ORDER BY post_time ASC
    </select>

    <select id="findChatList"  resultType="java.util.Map">
       select * from  ((select  <include refid="Base_Column_List"/>,staff_id as staffId,staff_name as staffName,group_id as groupId  from (
            select c.*,s.staff_id,s.staff_name,s.group_id  from chat_msg c left join staff s
               <!--on s.staff_id=(select staff_id  from staff_terminal t where  t.terminal_id=c.terminal_id)-->
                    on s.staff_id=c.post_user_id or s.staff_id=receice_user_id
        <where>
            is_del=0 and receice_user_id=0
            <if test="null neq keyWord and '' neq keyWord">
                and s.staff_name like concat('%',#{keyWord},'%')
                <if test="deptIds!=null and deptIds.size>0">
                    OR s.group_id in
                    <foreach  item="item" collection="deptIds" index="index"  open="(" separator="," close=")">#{item}</foreach>
                </if>
            </if>
           <!-- <if test="deptIds != null and deptIds.size()!=0">

            </if>-->
        </where>
        ) t
        group by post_user_id)
        union


        (select  <include refid="Base_Column_List"/>,staff_id as staffId,staff_name as staffName,group_id as groupId  from (
        select c.*,s.staff_id,s.staff_name,s.group_id  from chat_msg c left join staff s
        <!--on s.staff_id=(select staff_id  from staff_terminal t where  t.terminal_id=c.terminal_id)-->
        on s.staff_id=c.post_user_id or s.staff_id=receice_user_id
        <where>
            is_del=0 and post_user_id=0 and  receice_user_id not   in  (select distinct post_user_id from chat_msg)
           <if test="null neq keyWord and '' neq keyWord">
                and s.staff_name like concat('%',#{keyWord},'%')

               <if test="deptIds!=null and deptIds.size>0">
                   OR s.group_id in
                   <foreach  item="item" collection="deptIds" index="index"  open="(" separator="," close=")">#{item}</foreach>
               </if>

            </if>
        </where>
        ) t
        group by receice_user_id)) m
        order by postTime desc
    </select>

    <select id="findChatRecord"  parameterType="java.lang.Integer"  resultType="java.util.Map">
        select  <include refid="Base_Column_List"/>,s.staff_id as staffId,s.staff_name as staffName
        from chat_msg  c
        left join staff s
        on s.staff_id=(select staff_id  from staff_terminal t where  t.terminal_id=c.terminal_id)
        where (post_user_id=#{staffId} or receice_user_id=#{staffId}) and is_del=0 and c.terminal_id is not  null
        order by post_time asc
    </select>

    <update id="deleteChatRecord"  parameterType="java.lang.Integer"   >
        update chat_msg set  is_del=1 where post_user_id=#{staffId} or receice_user_id=#{staffId}
    </update>

    <update id="updateChatMegStatusBySeqId" parameterType="com.cst.xinhe.persistence.model.chat.ChatMsg">
        UPDATE chat_msg SET status = 1 where sequence_id = #{sequenceId}
    </update>
    <select id="findUnReadCount"  resultType="java.lang.Integer">
        select count(*) from chat_msg  where post_user_id=#{staffId}  and receice_user_id=0  and status=0
    </select>
</mapper>
